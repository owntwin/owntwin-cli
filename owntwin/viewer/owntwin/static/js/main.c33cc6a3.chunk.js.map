{"version":3,"sources":["lib/store.js","lib/util.js","Terrain.js","Layer.js","Building.js","ModelView.js","Sidenav.js","ItemInfo.js","Clock.js","DetailView.js","model.js","App.js","index.js"],"names":["layersStateAtom","atom","entityAtom","detailEntityAtom","debugAtom","scaleCoord","x","coordToPlane","model","lng","lat","planeWidth","planeHeight","canvas","width","height","ratioW","bbox","maxlng","minlng","ratioH","maxlat","minlat","y","TerrainContext","createContext","segments","BlankPlane","color","useContext","ModelContext","useState","coords","setCoords","useAtom","store","debug","setDebug","useEffect","onPointerDown","ev","shiftKey","intersections","length","point","coord","bboxW","bboxH","util","val","join","args","polygonOffset","polygonOffsetFactor","Terrain","levelmap","props","vertices","setVertices","geom","useUpdate","geometry","i","v","pos","z","verticesNeedUpdate","Array","from","ref","Provider","value","current","children","loader","SVGLoader","loadSVG","url","a","load","Promise","resolve","then","data","widthSVG","xml","viewBox","baseVal","heightSVG","paths","pathPoints","toShapes","forEach","shape","points","getPoints","map","p","push","catch","err","console","error","SVGMeshLayer","lines","setLines","visible","setVisible","terrain","svg","_lines","_points","THREE","setFromPoints","scale","merged","BufferGeometryUtils","mergeBufferGeometries","side","depthWrite","obj","size","setFromObject","getSize","position","set","translateX","translateY","line","getAttribute","array","Math","floor","getTerrainAltitude","setAttribute","Float32Array","PNGLayer","texture","useLoader","transparent","opacity","Layer","def","basePath","path","URL","toString","format","fallback","Popup","item","style","minWidth","type","name","Building","base","depth","useMemo","originLng","originLat","origin","moveTo","lineTo","extrudeSettings","steps","bevelEnabled","hover","setHover","document","body","cursor","onClick","onPointerOver","stopPropagation","onPointerOut","attach","pointerEvents","DefaultCamera","makeDefault","up","fov","aspect","window","innerWidth","innerHeight","near","far","blankTerrain","axios","get","resp","blankBuilding","routes","buildings","building","ModelView","setLevelmap","setBuildings","completeModel","layerState","setEntity","setDetailEntity","colorManagement","pixelRatio","min","devicePixelRatio","gl","powerPreference","antialias","useBridge","Object","values","modules","reduce","acc","module","concat","layers","layer","id","enabled","target","minDistance","maxDistance","maxPolarAngle","PI","Sidenav","communityURL","href","rel","fill","d","mdiHelpCircleOutline","mdiAccountGroup","requestFullscreen","mdiFullscreen","getField","entity","key","encodeURIComponent","ModulePane","isOpen","paneOpen","setPaneOpen","moduleInfoOpen","setModuleInfoOpen","layersState","setLayersState","actions","filters","mdiInformationOutline","description","license","missingFields","params","param","default_param","preventDefault","mdiOpenInNew","text","checked","onChange","state","assign","ItemInfo","iri","back","helpClicked","setHelpClicked","maxHeight","zIndex","mdiMenuUp","mdiMenuDown","entries","Clock","date","setDate","tick","_date","Date","toLocaleString","year","month","day","hour","minute","timer","setInterval","clearInterval","floors","floorN","floorHeight","floorsMetadata","floorGeom","floorGroup","activeFloor","setActiveFloor","anchorHover","setAnchorHover","anchorActive","setAnchorActive","floorMetadata","anchors","anchorGroup","j","userData","display","fontSize","fontWeight","position-z","metadata","ratio","center","getCenter","wireframe","DetailView","entityComponent","community","getModel","location","URLSearchParams","search","has","defaultModel","_basePath","App","setModel","modelLoaded","setModelLoaded","detailEntity","setItem","debugOpen","setDebugOpen","type_label","transitionRef","useRef","className","Transition","nodeRef","in","timeout","includes","mdiArrowLeftThinCircleOutline","mdiCloseCircle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c33cc6a3.chunk.js","sourcesContent":["import { atom } from 'jotai';\n\nconst layersStateAtom = atom({});\nconst entityAtom = atom(null);\nconst detailEntityAtom = atom(null);\nconst debugAtom = atom(null);\n\nexport { layersStateAtom, entityAtom, detailEntityAtom, debugAtom };\n","function scaleCoord(x) {\n  return x * 10000; // 1000000;\n}\n\nfunction coordToPlane(model, lng, lat, planeWidth, planeHeight) {\n  planeWidth = planeWidth || model.canvas.width;\n  planeHeight = planeHeight || model.canvas.height;\n  let bboxW = scaleCoord(model.bbox.maxlng) - scaleCoord(model.bbox.minlng);\n  let bboxH = scaleCoord(model.bbox.maxlat) - scaleCoord(model.bbox.minlat);\n  let ratioW = planeWidth / bboxW;\n  let ratioH = planeHeight / bboxH;\n  let rellng = scaleCoord(lng) - scaleCoord(model.bbox.minlng);\n  let rellat = scaleCoord(lat) - scaleCoord(model.bbox.minlat);\n  let w = rellng * ratioW;\n  let h = rellat * ratioH;\n  // console.log(\n  //   bboxW,\n  //   bboxH,\n  //   ratioW,\n  //   ratioH,\n  //   rellng,\n  //   rellat,\n  //   w,\n  //   h,\n  //   w - model.canvas.width / 2,\n  //   h - model.canvas.height / 2,\n  // );\n  return {\n    x: w - planeWidth / 2,\n    y: h - planeHeight / 2,\n  };\n}\n\nfunction planeToCoord(model, x, y) {\n  let bboxW = model.bbox.maxlng - model.bbox.minlng;\n  let bboxH = model.bbox.maxlat - model.bbox.minlat;\n  let ratioW = bboxW / model.canvas.width;\n  let ratioH = bboxH / model.canvas.height;\n  let lng = (x + model.canvas.width / 2) * ratioW;\n  let lat = (y + model.canvas.height / 2) * ratioH;\n  return {\n    lng: model.bbox.minlng + lng,\n    lat: model.bbox.minlat + lat,\n  };\n}\n\nexport { coordToPlane, planeToCoord };\n","import { createContext, useContext, useEffect, useState } from 'react';\nimport { useUpdate } from 'react-three-fiber';\n// import { Plane } from '@react-three/drei';\n// import { CameraHelper } from 'three';\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\n// import tw from 'twin.macro';\n\nimport { ModelContext } from './ModelView';\nimport * as util from './lib/util';\n\nexport const TerrainContext = createContext();\n\nconst width = 1024,\n  height = 1024;\nconst segments = 100;\nconst terrainLevelZoom = 2;\n\nfunction BlankPlane({ width, height, color, ...props }) {\n  const { model } = useContext(ModelContext);\n\n  const [coords, setCoords] = useState([]);\n\n  const [debug, setDebug] = useAtom(store.debugAtom);\n\n  useEffect(() => {\n    if (!debug) setCoords([]);\n  }, [debug]);\n\n  return (\n    <mesh\n      onPointerDown={(ev) => {\n        if (ev.shiftKey) {\n          // console.log({ intersections: ev.intersections });\n          if (ev.intersections.length > 0) {\n            let point = ev.intersections[0].point;\n            // console.log(point);\n            let coord = util.planeToCoord(model, point.x, point.y);\n            setCoords((val) => [...val, `[${coord.lat}, ${coord.lng}, 0]`]);\n            setDebug(`[${coords.join(', ')}]`);\n          }\n        }\n      }}\n    >\n      <planeBufferGeometry args={[width, height]} />\n      <meshBasicMaterial\n        color={color || 0xf1f3f5}\n        polygonOffset={true}\n        polygonOffsetFactor={1}\n      />\n    </mesh>\n  );\n}\n\nfunction Terrain({ levelmap, ...props }) {\n  const [vertices, setVertices] = useState(null);\n\n  const geom = useUpdate(\n    (geometry) => {\n      let zoom = terrainLevelZoom;\n      for (let i = 0; i < levelmap.length; i++) {\n        let v = levelmap[i];\n        let pos = v[0] + segments * (segments - 1 - v[1]);\n        geometry.vertices[pos].z = v[2] * zoom;\n      }\n      geometry.verticesNeedUpdate = true;\n      setVertices(Array.from(geometry.vertices));\n    },\n    [levelmap],\n  );\n\n  return (\n    <>\n      <BlankPlane width={width} height={height} />\n      <mesh>\n        <planeGeometry\n          ref={geom}\n          args={[width, height, segments - 1, segments - 1]}\n        />\n        <meshBasicMaterial color={0xf8f9fa} />\n      </mesh>\n      <TerrainContext.Provider\n        value={{ geometry: geom.current, vertices: vertices }} // should be geom?\n      >\n        {props.children}\n      </TerrainContext.Provider>\n    </>\n  );\n}\n\nexport default Terrain;\n","import {\n  useContext,\n  useEffect,\n  // useRef,\n  useState,\n  Suspense,\n} from 'react';\nimport { useUpdate, useLoader } from 'react-three-fiber';\n\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils';\nimport * as THREE from 'three';\n\nimport { TerrainContext } from './Terrain';\n\nconst width = 1024,\n  height = 1024;\nconst segments = 100;\n\nconst loader = new SVGLoader();\n\nasync function loadSVG(url) {\n  const load = () =>\n    new Promise((resolve) => {\n      loader.load(url, resolve);\n    });\n\n  return await load()\n    .then((data) => {\n      const widthSVG = data.xml.viewBox.baseVal.width;\n      const heightSVG = data.xml.viewBox.baseVal.height;\n      const paths = data.paths;\n      let pathPoints = [];\n\n      for (let i = 0; i < paths.length; i++) {\n        let path = paths[i];\n\n        const shapes = path.toShapes(true);\n\n        shapes.forEach((shape) => {\n          let points = shape.getPoints();\n\n          points = points.map((p) => {\n            let x = p.x;\n            if (x >= widthSVG) x = widthSVG - 1;\n            let y = heightSVG - p.y;\n            if (y < 0) y = 0;\n            if (y >= heightSVG) y = heightSVG - 1;\n            p.x = x;\n            p.y = y;\n            return p;\n          });\n\n          pathPoints.push(points);\n        });\n      }\n\n      return { pathPoints: pathPoints, width: widthSVG, height: heightSVG };\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n}\n\nfunction SVGMeshLayer({ url, ...props }) {\n  const [lines, setLines] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  const terrain = useContext(TerrainContext);\n\n  useEffect(() => {\n    (async () => {\n      const svg = await loadSVG(url);\n\n      let _lines = [];\n\n      svg.pathPoints.forEach((points, i) => {\n        let _points = [];\n        points.forEach((p, i) => {\n          if (i > 0) {\n            _points.push(points[i - 1]);\n            _points.push(p);\n          }\n        });\n        const geometry = new THREE.BufferGeometry().setFromPoints(_points);\n        geometry.scale(width / svg.width, height / svg.height, 1);\n        _lines.push(geometry);\n      });\n\n      let merged = BufferGeometryUtils.mergeBufferGeometries(_lines);\n\n      setLines([\n        <lineSegments key={0} geometry={merged}>\n          <meshBasicMaterial\n            color={0xdadce0}\n            side={THREE.DoubleSide}\n            depthWrite={false}\n            // depthTest={false}\n          />\n        </lineSegments>,\n      ]);\n    })();\n  }, [url]);\n\n  const ref = useUpdate(\n    (obj) => {\n      let bbox = new THREE.Box3().setFromObject(obj);\n      let size = bbox.getSize(new THREE.Vector3());\n      obj.position.set(0, 0, 0);\n      obj.translateX(-size.x / 2);\n      obj.translateY(-size.y / 2);\n\n      function getTerrainAltitude(x, y) {\n        if (!terrain.vertices) return 0;\n        let pos =\n          Math.floor(x / (width / segments)) +\n          segments * (segments - 1 - Math.floor(y / (height / segments)));\n        if (pos < 0 || terrain.vertices.length <= pos) {\n          // console.log(x, y, pos);\n          return 0;\n        }\n        return terrain.vertices[pos].z;\n      }\n\n      // terrain\n      obj.children.forEach((line) => {\n        let position = line.geometry.getAttribute('position');\n        let vertices = [];\n        vertices = position.array.map((v, i) => {\n          if (i % 3 === 2) {\n            let z =\n              getTerrainAltitude(position.array[i - 2], position.array[i - 1]) +\n              2;\n            return z;\n          } else {\n            return v;\n          }\n        });\n        line.geometry.setAttribute(\n          'position',\n          new THREE.BufferAttribute(new Float32Array(vertices), 3),\n        );\n      });\n\n      setVisible(true);\n    },\n    [lines, terrain.vertices],\n  );\n\n  return (\n    <group ref={ref} visible={visible}>\n      {lines}\n    </group>\n  );\n}\n\nfunction PNGLayer({ url, ...props }) {\n  const terrain = useContext(TerrainContext);\n\n  const texture = useLoader(THREE.TextureLoader, url);\n\n  return (\n    <mesh geometry={terrain.geometry}>\n      <meshBasicMaterial\n        map={texture}\n        transparent={true}\n        color={0xffffff}\n        opacity={props.opacity ? props.opacity : 0.5}\n      />\n    </mesh>\n  );\n}\n\nfunction Layer({ def, basePath, ...props }) {\n  if (basePath) {\n    def.path = basePath ? (new URL(def.path, basePath)).toString() : def.path;\n  }\n  if (def.format === 'svg') {\n    return <SVGMeshLayer url={def.path} />;\n  } else if (def.format === 'png') {\n    return (\n      <Suspense fallback={null}>\n        <PNGLayer url={def.path} opacity={0.5} />\n      </Suspense>\n    );\n  }\n}\n\nexport default Layer;\n","import { useContext, useEffect, useMemo, useState } from 'react';\nimport * as THREE from 'three';\nimport { Html } from '@react-three/drei';\nimport tw from 'twin.macro';\n\nimport * as util from './lib/util';\n\nimport { ModelContext } from './ModelView';\n\nfunction Popup({ item, ...props }) {\n  return (\n    <div\n      css={[tw`bg-white border rounded py-2 px-3`]}\n      style={{ minWidth: '200px' }}\n    >\n      <div css={[tw`text-xs`]}>{item.type}</div>\n      <div>{item.name}</div>\n      <div css={[tw`mt-3 text-xs text-gray-600`]}>クリックで拡大</div>\n    </div>\n  );\n}\n\nfunction Building({ base, z, depth, onPointerDown, ...props }) {\n  const { model } = useContext(ModelContext);\n\n  const shape = useMemo(() => new THREE.Shape(), []);\n\n  let originLng = base[0][0],\n    originLat = base[0][1];\n\n  let origin = util.coordToPlane(model, originLng, originLat);\n  shape.moveTo(0, 0);\n\n  base.forEach((v) => {\n    let p = util.coordToPlane(model, v[0], v[1]);\n    shape.lineTo(p.x - origin.x, p.y - origin.y);\n  });\n\n  const geom = useMemo(() => {\n    let extrudeSettings = {\n      steps: 1,\n      depth: depth || 50,\n      bevelEnabled: false,\n    };\n    return new THREE.ExtrudeBufferGeometry(shape, extrudeSettings);\n  }, [shape, depth]);\n\n  const [hover, setHover] = useState(false);\n\n  const color = {\n    default: 0xf1f3f4,\n    hover: 0x666666,\n  };\n\n  useEffect(() => {\n    document.body.style.cursor = hover ? 'pointer' : 'auto';\n  }, [hover]);\n\n  return (\n    <mesh\n      position={[origin.x, origin.y, z]}\n      geometry={geom}\n      onClick={props.onClick}\n      onPointerDown={onPointerDown}\n      onPointerOver={(ev) => {\n        ev.stopPropagation();\n        setHover(true);\n      }}\n      onPointerOut={(ev) => setHover(false)}\n    >\n      <meshLambertMaterial color={hover ? color.hover : color.default} />\n      <lineSegments>\n        <edgesGeometry attach=\"geometry\" args={[geom, 45]} />\n        <lineBasicMaterial color={0xcccccc} attach=\"material\" />\n      </lineSegments>\n      <Html style={{ pointerEvents: 'none' }}>\n        {hover && <Popup item={{ name: props.name, type: props.type }} />}\n      </Html>\n    </mesh>\n  );\n}\n\nexport default Building;\n","import { useEffect, createContext, useState } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei';\n// import { CameraHelper } from 'three';\nimport axios from 'axios';\n\nimport { useAtom, Bridge, useBridge } from 'jotai';\nimport * as store from './lib/store';\n\nimport Terrain from './Terrain';\nimport Layer from './Layer';\nimport Building from './Building';\n\nexport const ModelContext = createContext();\n\nfunction DefaultCamera({ ...props }) {\n  // const camera = useRef();\n  // useHelper(camera, CameraHelper, 1, 'hotpink');\n\n  return (\n    <PerspectiveCamera\n      makeDefault\n      up={[0, 0, 1]}\n      position={[0, -800 * 1.2, 400 * 1.2]}\n      fov={60}\n      aspect={window.innerWidth / window.innerHeight}\n      near={1}\n      far={2048}\n      // ref={camera}\n    />\n  );\n}\n\nasync function completeModel(model, base) {\n  const blankTerrain = [];\n\n  if (model.terrain && model.terrain.path) {\n    model.terrain.path = base\n      ? new URL(model.terrain.path, base).toString()\n      : model.terrain.path;\n    model.terrain.data = await axios\n      .get(model.terrain.path)\n      .then((resp) => resp.data)\n      .catch(() => blankTerrain);\n  } else {\n    model.terrain = model.terrain || {};\n    model.terrain.data = blankTerrain;\n  }\n\n  const blankBuilding = {\n    routes: [],\n    buildings: [],\n  };\n\n  if (model.building && model.building.path) {\n    model.building.path = base\n      ? new URL(model.building.path, base).toString()\n      : model.building.path;\n    model.building.data = await axios\n      .get(model.building.path)\n      .then((resp) => resp.data)\n      .catch(() => blankBuilding);\n  } else {\n    model.building = model.building || {};\n    model.building.data = blankBuilding;\n  }\n\n  return model;\n}\n\nfunction ModelView({ model, basePath, ...props }) {\n  // console.log({ model: JSON.stringify(model) });\n\n  const [levelmap, setLevelmap] = useState([]);\n  const [buildings, setBuildings] = useState([]);\n\n  useEffect(() => {\n    completeModel(model, basePath).then((model) => {\n      setLevelmap(model.terrain.data);\n      setBuildings(model.building.data.buildings);\n    });\n  }, [model, basePath]);\n\n  const [layerState] = useAtom(store.layersStateAtom);\n  const [, setEntity] = useAtom(store.entityAtom);\n  const [, setDetailEntity] = useAtom(store.detailEntityAtom);\n\n  return (\n    <Canvas\n      colorManagement={false}\n      pixelRatio={Math.min(2, window.devicePixelRatio)}\n      gl={{ powerPreference: 'default', antialias: false }}\n    >\n      <DefaultCamera />\n      <ambientLight args={[0xffffff, 1]} />\n      <pointLight position={[10, 10, 10]} />\n      <Bridge value={useBridge()}>\n        <ModelContext.Provider value={{ model: model }}>\n          <Terrain levelmap={levelmap}>\n            {Object.values(model.modules)\n              .reduce((acc, module) => acc.concat(module.layers), [])\n              .map((layer) =>\n                layerState[layer.id] && layerState[layer.id].enabled ? (\n                  <Layer key={layer.id} def={layer} basePath={basePath} />\n                ) : null,\n              )}\n            {buildings.map((building) => (\n              <Building\n                key={building.id}\n                base={building.base}\n                z={building.z}\n                depth={building.depth}\n                name={building.name}\n                type={building.type}\n                onPointerDown={(ev) => {\n                  ev.stopPropagation();\n                  setEntity(building);\n                  setDetailEntity(building);\n                }}\n              />\n            ))}\n          </Terrain>\n        </ModelContext.Provider>\n        )\n      </Bridge>\n      <OrbitControls\n        target={[0, 0, 0]}\n        minDistance={100}\n        maxDistance={1500}\n        maxPolarAngle={Math.PI / 2 - 0.1}\n      />\n    </Canvas>\n  );\n}\n\nexport default ModelView;\n","// import { useState } from 'react';\nimport { mdiHelpCircleOutline, mdiAccountGroup, mdiFullscreen } from '@mdi/js';\nimport tw from 'twin.macro';\n\nfunction Sidenav({ communityURL, ...props }) {\n  const HELP_URL = 'http://beta.owntwin.com/docs/user-guide/';\n\n  return (\n    <div css={[tw`fixed bottom-4 left-4 flex items-center h-10`]}>\n      <div css={[tw`mr-3 flex items-center`]}>\n        <a href={HELP_URL} target=\"_blank\" rel=\"noreferrer\">\n          <svg style={{ width: '24px', height: '24px' }} viewBox=\"0 0 24 24\">\n            <path fill=\"#000000\" d={mdiHelpCircleOutline} />\n          </svg>\n        </a>\n      </div>\n      {!!communityURL && (\n        <div css={[tw`mr-3 flex items-center`]}>\n          <a href={communityURL} target=\"_blank\" rel=\"noreferrer\">\n            <svg style={{ width: '24px', height: '24px' }} viewBox=\"0 0 24 24\">\n              <path fill=\"#000000\" d={mdiAccountGroup} />\n            </svg>\n          </a>\n        </div>\n      )}\n      <div css={[tw`flex items-center`]}>\n        <button\n          css={[tw`focus:outline-none`]}\n          onClick={() => {\n            document.body.requestFullscreen();\n          }}\n        >\n          <svg style={{ width: '24px', height: '24px' }} viewBox=\"0 0 24 24\">\n            <path fill=\"#000000\" d={mdiFullscreen} />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidenav;\n","import { useState } from 'react';\n\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\nimport tw from 'twin.macro';\nimport {\n  // mdiChevronUp, mdiChevronDown,\n  mdiMenuUp,\n  mdiMenuDown,\n  mdiInformationOutline,\n  mdiOpenInNew,\n} from '@mdi/js';\n\nfunction getField(entity, key) {\n  return entity && entity[key] ? encodeURIComponent(entity[key]) : null;\n}\n\nfunction ModulePane({ module, isOpen, ...props }) {\n  const [paneOpen, setPaneOpen] = useState(isOpen || false);\n  const [moduleInfoOpen, setModuleInfoOpen] = useState(false);\n\n  const [layersState, setLayersState] = useAtom(store.layersStateAtom);\n  const [entity] = useAtom(store.entityAtom);\n\n  const layers = module.layers;\n  const actions = module.actions || [];\n  const filters = [];\n\n  return (\n    <div css={[tw`border-b`]}>\n      <div\n        css={[tw`px-3 py-2 cursor-pointer hover:bg-blue-100 flex flex-col`]}\n        onClick={(ev) => {\n          setPaneOpen(!paneOpen);\n        }}\n      >\n        <div css={[tw`flex items-center`]}>\n          <div css={[tw`flex-grow`]}>{module.name}</div>\n          <div css={[tw`flex items-center`]}>\n            <div\n              css={[tw`rounded p-1 hover:bg-blue-200`]}\n              onClick={(ev) => {\n                if (paneOpen) {\n                  ev.stopPropagation();\n                  setModuleInfoOpen(!moduleInfoOpen);\n                } else {\n                  setModuleInfoOpen(true);\n                }\n              }}\n            >\n              <svg\n                css={[tw`fill-current text-gray-600`]}\n                style={{ width: '18px', height: '18px' }}\n                viewBox=\"0 0 24 24\"\n              >\n                <path d={mdiInformationOutline} />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n      {paneOpen && (\n        <div css={[tw`px-3 pb-3 text-sm`]}>\n          {moduleInfoOpen && (\n            <div css={[tw`mb-2 mt-1`]}>\n              <div css={[tw`my-1`]}>説明</div>\n              <div css={[tw`p-2 text-sm bg-gray-100 rounded`]}>\n                <pre css={[tw`break-words whitespace-pre-wrap`]}>\n                  {module.description || (\n                    <span css={[tw`text-gray-600`]}>未登録</span>\n                  )}\n                </pre>\n              </div>\n              <div css={[tw`mt-2 mb-1`]}>利用条件</div>\n              <div css={[tw`p-2 text-sm bg-gray-100 rounded`]}>\n                <pre css={[tw`break-words whitespace-pre-wrap`]}>\n                  {module.license || (\n                    <span css={[tw`text-gray-600`]}>未登録</span>\n                  )}\n                </pre>\n              </div>\n            </div>\n          )}\n          <div css={[tw`mb-2`]}>\n            <div css={[tw`my-1`]}>アクション</div>\n            <ul>\n              {actions.length > 0 ? (\n                actions.map((item, i) => {\n                  let missingFields = [];\n                  if (!item.href) {\n                    missingFields.push('href');\n                  }\n                  if (!!item.params) {\n                    item.params.forEach(([param, key]) => {\n                      let ok = getField(entity, key) !== null;\n                      if (!ok) {\n                        missingFields.push(key);\n                      }\n                    });\n                  }\n\n                  function href() {\n                    let params = item.params\n                      ? item.params.map(([param, key]) => {\n                          return `${param}=${getField(entity, key) || ''}`;\n                        })\n                      : [];\n                    return `${item.href}?${\n                      item.default_param ? `${item.default_param}&` : ''\n                    }${params.join('&')}`;\n                  }\n\n                  return (\n                    <li key={i}>\n                      <a\n                        href={href()}\n                        onClick={(ev) => {\n                          if (missingFields.length > 0) {\n                            ev.preventDefault();\n                            return false;\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        css={[\n                          tw`flex items-center cursor-pointer hover:text-gray-800`,\n                        ]}\n                      >\n                        <svg\n                          css={[tw`fill-current text-black mr-0.5`]}\n                          style={{ width: '14px', height: '14px' }}\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path d={mdiOpenInNew} />\n                        </svg>\n                        <div\n                          css={[\n                            missingFields.length > 0 ? tw`line-through` : null,\n                          ]}\n                        >\n                          {item.text}\n                        </div>\n                      </a>\n                      {missingFields.length > 0 && (\n                        <div\n                          css={[\n                            tw`bg-gray-500 text-white rounded px-1 py-0.5 mb-0.5 text-xs`,\n                          ]}\n                        >\n                          情報を追加してください:{' '}\n                          <code>{missingFields.join(', ')}</code>\n                        </div>\n                      )}\n                    </li>\n                  );\n                })\n              ) : (\n                <li>\n                  <span css={[tw`text-gray-600`]}>未登録</span>\n                </li>\n              )}\n            </ul>\n          </div>\n          <div css={[tw`mb-2`]}>\n            <div css={[tw`my-1`]}>レイヤー</div>\n            <ul>\n              {layers.length > 0 ? (\n                layers.map((item, i) => {\n                  return (\n                    <li key={i}>\n                      <input\n                        css={[tw`mr-1`]}\n                        type=\"checkbox\"\n                        checked={layersState[item.id].enabled}\n                        onChange={(ev) => {\n                          setLayersState((state) => {\n                            state[item.id].enabled = !state[item.id].enabled;\n                            return Object.assign({}, state);\n                          });\n                        }}\n                      />\n                      {item.name}\n                    </li>\n                  );\n                })\n              ) : (\n                <li>\n                  <span css={[tw`text-gray-600`]}>未登録</span>\n                </li>\n              )}\n            </ul>\n          </div>\n          <div css={[tw`mb-2`]}>\n            <div css={[tw`my-1`]}>フィルター</div>\n            <ul>\n              {filters.length > 0 ? (\n                filters.map((item, i) => (\n                  <li key={i}>\n                    <span css={[tw`text-gray-600`]}>{item.name}</span>\n                  </li>\n                ))\n              ) : (\n                <li>\n                  <span css={[tw`text-gray-600`]}>未登録</span>\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction ItemInfo({ name, type, iri, item, modules, isOpen, back, ...props }) {\n  const [paneOpen, setPaneOpen] = useState(isOpen || false);\n  const [helpClicked, setHelpClicked] = useState(false);\n  const description = item.description || null;\n\n  return (\n    <div\n      css={[\n        tw`fixed top-4 left-4 flex flex-col bg-white shadow rounded right-4 sm:right-auto sm:w-72`,\n        paneOpen ? tw`bottom-20` : tw`bottom-auto`,\n      ]}\n      style={{ ...props.style, maxHeight: '40rem', zIndex: '20000000' }}\n    >\n      <div>\n        {back}\n        <div css={[back ? tw`border-t` : null, tw`py-2 px-3 rounded bg-white`]}>\n          <div css={[tw`text-xs`]}>{type}</div>\n          <div>{name}</div>\n          <div css={[tw`text-xs text-gray-600 break-all`]}>\n            {iri ? iri : '未登録'}\n          </div>\n        </div>\n      </div>\n      <div\n        css={[\n          tw`border-t flex justify-center cursor-pointer py-1 hover:bg-gray-100`,\n        ]}\n        onClick={() => {\n          setPaneOpen(!paneOpen);\n          !helpClicked && setHelpClicked(true);\n        }}\n      >\n        <div css={[tw`text-xs text-gray-800 flex items-center`]}>\n          <svg\n            css={[tw`fill-current text-gray-600`]}\n            style={{ width: '18px', height: '18px' }}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d={paneOpen ? mdiMenuUp : mdiMenuDown} />\n          </svg>\n          {!helpClicked && <div>クリックで開く/閉じる</div>}\n        </div>\n      </div>\n      <div\n        css={[\n          paneOpen ? tw`block` : tw`hidden`,\n          tw`flex-grow overflow-y-scroll`,\n        ]}\n      >\n        <div css={[tw`mt-0 px-2 py-1 text-xs text-gray-800`]}>\n          インフォメーション\n        </div>\n        <div css={[tw`border rounded-sm py-2 px-3 m-2 mt-0`]}>\n          <div css={[tw`text-sm`, !description && tw`text-gray-600`]}>\n            {description ? description : '未登録'}\n          </div>\n        </div>\n        <div css={[tw`py-2`]}>\n          <div css={[tw`px-2 py-1 border-b text-xs text-gray-800`]}>\n            モジュール\n          </div>\n          {Object.entries(modules).map(([id, module]) => (\n            <ModulePane key={id} module={module} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemInfo;\n","import { useEffect, useState } from 'react';\nimport tw from 'twin.macro';\n\nfunction Clock({ ...props }) {\n  const [date, setDate] = useState();\n\n  useEffect(() => {\n    tick();\n    let timer = setInterval(() => tick(), 1000 * 30);\n\n    return function cleanup() {\n      clearInterval(timer);\n    };\n  });\n\n  function tick() {\n    let _date = new Date().toLocaleString('ja-JP', {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n    setDate(_date);\n  }\n\n  return (\n    <div css={[tw`flex items-center`]}>\n      <div css={[tw`bg-white shadow rounded py-2 px-3 select-none`]}>{date}</div>\n    </div>\n  );\n}\n\nexport default Clock;\n","import {\n  useEffect,\n  useMemo,\n  createContext,\n  //  useRef,\n  useState,\n} from 'react';\nimport { Canvas, useUpdate } from 'react-three-fiber';\nimport { OrbitControls, PerspectiveCamera, Html } from '@react-three/drei';\nimport * as THREE from 'three';\n// import { CameraHelper } from 'three';\n\nimport { useAtom, Bridge, useBridge } from 'jotai';\nimport * as store from './lib/store';\nimport * as util from './lib/util';\n\nexport const ModelContext = createContext();\n\nfunction DefaultCamera({ ...props }) {\n  // const camera = useRef();\n  // useHelper(camera, CameraHelper, 1, 'hotpink');\n\n  return (\n    <PerspectiveCamera\n      makeDefault\n      up={[0, 0, 1]}\n      position={[0, -800 * 0.5, 400 * 0.5]}\n      fov={60}\n      aspect={window.innerWidth / window.innerHeight}\n      near={1}\n      far={2048}\n      // ref={camera}\n    />\n  );\n}\n\nfunction BlankPlane({ width, height, color, ...props }) {\n  return (\n    <mesh>\n      <planeBufferGeometry args={[width, height]} />\n      <meshBasicMaterial\n        color={color || 0xf1f3f5}\n        polygonOffset={true}\n        polygonOffsetFactor={1}\n      />\n    </mesh>\n  );\n}\n\nfunction Building({ model, base, depth, floor, floors, ...props }) {\n  const planeWidth = 250,\n    planeHeight = 250;\n\n  const [entity, setEntity] = useAtom(store.entityAtom);\n\n  const shape = useMemo(() => new THREE.Shape(), []);\n\n  let originLng = base[0][0],\n    originLat = base[0][1];\n\n  let origin = util.coordToPlane(\n    model,\n    originLng,\n    originLat,\n    planeWidth,\n    planeHeight,\n  );\n  shape.moveTo(0, 0);\n\n  base.forEach((v) => {\n    let p = util.coordToPlane(model, v[0], v[1], planeWidth, planeHeight);\n    shape.lineTo(p.x - origin.x, p.y - origin.y);\n  });\n\n  const geom = useMemo(() => {\n    const extrudeSettings = {\n      steps: 1,\n      depth: (depth || 50) * 0.2, // TODO: Fix\n      bevelEnabled: false,\n    };\n    return new THREE.ExtrudeBufferGeometry(shape, extrudeSettings);\n  }, [shape, depth]);\n\n  /* Floors */\n  let floorN = floor || 1;\n  let floorHeight = ((depth || 50) * 0.2) / floorN;\n  let floorsMetadata = floors ? floors : {};\n\n  const floorGeom = useMemo(() => new THREE.ShapeBufferGeometry(shape), [\n    shape,\n  ]);\n\n  let floorGroup = [];\n  const [activeFloor, setActiveFloor] = useState(null);\n  const [hover, setHover] = useState(null);\n  const [anchorHover, setAnchorHover] = useState(null);\n  const [anchorActive, setAnchorActive] = useState(null);\n\n  useEffect(() => {\n    if (entity.id !== anchorActive) {\n      setAnchorActive(null);\n    }\n  }, [entity.id, anchorActive]);\n\n  useEffect(() => {\n    document.body.style.cursor = hover || anchorHover ? 'pointer' : 'auto';\n  }, [hover, anchorHover]);\n\n  for (let i = 0; i < floorN; i++) {\n    let floorMetadata = floorsMetadata[`${i + 1}`] || {\n      texture: null,\n      anchors: [],\n    };\n    floorMetadata['n'] = `${i + 1}`;\n\n    const anchorGroup = floorMetadata.anchors.map((v, j) => {\n      // console.log(v);\n\n      let p = util.coordToPlane(\n        model,\n        v.position.lng,\n        v.position.lat,\n        planeWidth,\n        planeHeight,\n      );\n\n      return (\n        <mesh\n          key={j}\n          position={[p.x - origin.x, p.y - origin.y, floorHeight / 2]}\n          userData={{ data: v }}\n          visible={activeFloor === null || activeFloor === i + 1}\n        >\n          <sphereBufferGeometry args={[0.1, 20, 20]} />\n          <meshBasicMaterial color={0x2196f3} />\n          <mesh\n            name=\"hitbox\"\n            visible={activeFloor === null || activeFloor === i + 1}\n            onPointerOver={(ev) => {\n              ev.stopPropagation();\n              activeFloor === i + 1 && setAnchorHover(v.id);\n            }}\n            onPointerOut={(ev) => {\n              ev.stopPropagation();\n              anchorHover === v.id && setAnchorHover(null);\n            }}\n            onPointerDown={(ev) => {\n              if (activeFloor !== i + 1 || !anchorHover === v.id) return;\n              ev.stopPropagation();\n              // TODO: Switch on click\n              // setLocalEntity(v);\n              setEntity(v);\n              setAnchorActive(v.id);\n            }}\n          >\n            <sphereBufferGeometry args={[1, 20, 20]} />\n            <meshBasicMaterial\n              visible={anchorHover === v.id || anchorActive === v.id}\n              color={0x2196f3}\n              opacity={0.5}\n              transparent={true}\n            />\n          </mesh>\n          <Html style={{ pointerEvents: 'none' }}>\n            <div\n              style={{\n                display:\n                  activeFloor === null || activeFloor === i + 1\n                    ? 'block'\n                    : 'none',\n                fontSize: '0.75rem',\n                fontWeight:\n                  anchorHover === v.id || anchorActive === v.id ? 'bold' : null,\n                width: '10rem',\n              }}\n            >\n              {v.name}\n            </div>\n          </Html>\n        </mesh>\n      );\n    });\n\n    let floor = (\n      <mesh\n        key={i}\n        position-z={floorHeight * i}\n        geometry={floorGeom}\n        userData={{ metadata: floorMetadata }}\n        onPointerDown={(ev) => {\n          if (!!anchorHover) return;\n          if (activeFloor === i + 1) {\n            ev.stopPropagation();\n            setActiveFloor(null);\n          } else if (activeFloor === null) {\n            ev.stopPropagation();\n            setActiveFloor(i + 1);\n          }\n        }}\n        onPointerOver={(ev) => {\n          if (activeFloor === null || activeFloor === i + 1) {\n            ev.stopPropagation();\n            setHover(i + 1);\n          }\n        }}\n        onPointerOut={(ev) => {\n          if (activeFloor === null || activeFloor === i + 1) {\n            ev.stopPropagation();\n            setHover(null);\n          }\n        }}\n        visible={activeFloor === null || activeFloor === i + 1}\n      >\n        <meshBasicMaterial\n          color={hover === i + 1 ? 0xaaaaaa : 0xf1f3f4}\n          side={THREE.DoubleSide}\n          visible={activeFloor === null || activeFloor === i + 1}\n        />\n        <lineSegments>\n          <edgesGeometry attach=\"geometry\" args={[floorGeom]} />\n          <lineBasicMaterial color={0xcccccc} attach=\"material\" />\n        </lineSegments>\n        <group name=\"anchors\">{anchorGroup}</group>\n      </mesh>\n    );\n\n    floorGroup.push(floor);\n  }\n\n  const ref = useUpdate((obj) => {\n    const bbox = new THREE.Box3().setFromObject(obj);\n    const size = bbox.getSize(new THREE.Vector3());\n\n    const ratio = Math.min(\n      (planeWidth - 32) / size.x,\n      (planeHeight - 32) / size.y,\n    );\n\n    obj.scale.set(ratio, ratio, ratio);\n\n    const center = bbox.getCenter(new THREE.Vector3());\n    obj.translateX(-center.x * ratio);\n    obj.translateY(-center.y * ratio);\n  }, []);\n\n  return (\n    <mesh ref={ref} position={[0, 0, 0]} geometry={geom}>\n      <meshLambertMaterial wireframe={true} visible={false} />\n      <lineSegments>\n        <edgesGeometry attach=\"geometry\" args={[geom, 45]} />\n        <lineBasicMaterial color={0xcccccc} attach=\"material\" />\n      </lineSegments>\n      <group name=\"floors\">{floorGroup}</group>\n    </mesh>\n  );\n}\n\nfunction DetailView({ model, type, entity, ...props }) {\n  let entityComponent;\n\n  if (entityComponent) entityComponent = null;\n\n  if (!!entity && type === 'building') {\n    entityComponent = (\n      <Building\n        key={entity.id}\n        model={model}\n        base={entity.base}\n        depth={entity.depth}\n        floor={entity.floor}\n        floors={entity.floors}\n      />\n    );\n  }\n\n  return (\n    <Canvas\n      colorManagement={false}\n      pixelRatio={Math.min(2, window.devicePixelRatio)}\n      gl={{ powerPreference: 'default', antialias: false }}\n    >\n      <DefaultCamera />\n      <ambientLight args={[0xffffff, 1]} />\n      <pointLight position={[10, 10, 10]} />\n      {/* <ModelContext.Provider value={{ model }}>\n      </ModelContext.Provider> */}\n      <BlankPlane width={250} height={250} />\n      <Bridge value={useBridge()}>{entityComponent}</Bridge>\n      <OrbitControls\n        target={[0, 0, 0]}\n        minDistance={100}\n        maxDistance={500}\n        maxPolarAngle={Math.PI / 2 - 0.1}\n      />\n    </Canvas>\n  );\n}\n\nexport default DetailView;\n","const model = {\n  id: null,\n  name: null,\n  type: null,\n  iri: null,\n  url: null,\n  community: null,\n  description: null,\n  bbox: {\n    minlng: 139.647216796875,\n    minlat: 35.550105335885505,\n    maxlng: 139.658203125,\n    maxlat: 35.55904339525895,\n  },\n  canvas: {\n    width: 1024,\n    height: 1024,\n  },\n  terrain: null,\n  building: null,\n  modules: {},\n};\n\nexport { model };\n","import { useEffect, useRef, useState } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\nimport axios from 'axios';\n\nimport ModelView from './ModelView';\nimport Sidenav from './Sidenav';\nimport ItemInfo from './ItemInfo';\nimport Clock from './Clock';\nimport DetailView from './DetailView';\n\nimport tw from 'twin.macro';\nimport './App.css';\nimport { mdiArrowLeftThinCircleOutline, mdiCloseCircle } from '@mdi/js';\n\nimport { model as defaultModel } from './model';\n\n// const DEBUG = false;\n\nasync function getModel() {\n  let model, basePath, path;\n  const url = new URL(window.location);\n  const params = new URLSearchParams(url.search);\n  // TODO: Debug only\n  if (params.has('twin')) {\n    basePath = params.get('twin');\n    path = new URL('./twin.json', basePath);\n  } else {\n    basePath = null;\n    path = './twin.json';\n  }\n  model = await axios\n    .get(path)\n    .then((resp) => resp.data)\n    .catch(() => defaultModel);\n  model._basePath = basePath;\n\n  model.bbox = {\n    minlng: model.bbox[0],\n    minlat: model.bbox[1],\n    maxlng: model.bbox[2],\n    maxlat: model.bbox[3],\n  };\n\n  return model;\n}\n\nfunction App() {\n  const [model, setModel] = useState({\n    id: null,\n    name: null,\n    type: null,\n    iri: null,\n    description: null,\n    modules: [],\n  });\n  const [modelLoaded, setModelLoaded] = useState(false);\n\n  const [, setLayersState] = useAtom(store.layersStateAtom);\n\n  const [entity, setEntity] = useAtom(store.entityAtom);\n  const [detailEntity, setDetailEntity] = useAtom(store.detailEntityAtom);\n  const [item, setItem] = useState({});\n\n  const [debugOpen, setDebugOpen] = useState(false);\n  const [debug, setDebug] = useAtom(store.debugAtom);\n\n  useEffect(() => {\n    (async () => {\n      let model = await getModel();\n      setModel(model);\n      setModelLoaded(true);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (!!debug) setDebugOpen(true);\n  }, [debug]);\n\n  useEffect(() => {\n    setLayersState(() => {\n      return Object.values(model.modules)\n        .reduce((acc, module) => acc.concat(module.layers), [])\n        .reduce((acc, layer) => {\n          acc[`${layer.id}`] = { enabled: layer.enabled };\n          return acc;\n        }, {});\n    });\n  }, [setLayersState, model.modules]);\n\n  useEffect(() => {\n    !entity && model && model.id && setEntity(model);\n    if (!entity) return;\n    setItem({\n      name: entity.name,\n      type: entity.type_label || entity.type,\n      iri: entity.iri,\n      description: entity.description,\n    });\n  }, [entity, setEntity, model]);\n\n  const transitionRef = useRef(null);\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{ display: !detailEntity ? 'block' : 'none' }}\n        css={[tw`absolute top-0 bottom-0 left-0 right-0`]}\n      >\n        {modelLoaded && <ModelView model={model} basePath={model._basePath} />}\n      </div>\n      <Transition nodeRef={transitionRef} in={!!detailEntity} timeout={1}>\n        {(state) => (\n          <div\n            ref={transitionRef}\n            className=\"detail-view\"\n            css={[\n              tw`absolute top-0 bottom-0 left-0 right-0`,\n              ['entering', 'entered'].includes(state) ? tw`block` : tw`hidden`,\n            ]}\n          >\n            <div\n              style={{\n                width: '100%',\n                height: '100%',\n                display: state === 'entered' ? 'block' : 'none',\n              }}\n            >\n              {modelLoaded && (\n                <DetailView\n                  model={model}\n                  type={'building'}\n                  entity={detailEntity}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </Transition>\n      {modelLoaded && (\n        <ItemInfo\n          name={item.name}\n          type={item.type}\n          iri={item.iri}\n          item={item}\n          modules={model.modules}\n          back={\n            detailEntity && (\n              <div\n                css={[\n                  tw`text-sm text-gray-600 px-2 py-2 cursor-pointer flex items-center bg-gray-50 hover:bg-gray-100`,\n                ]}\n                onClick={() => {\n                  if (detailEntity.id === entity.id) {\n                    setDetailEntity(null);\n                    setEntity(null);\n                  } else {\n                    setEntity(detailEntity);\n                  }\n                }}\n              >\n                <div css={[tw`mr-1`]}>\n                  <svg\n                    style={{ width: '18px', height: '18px' }}\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path fill=\"#888\" d={mdiArrowLeftThinCircleOutline} />\n                  </svg>\n                </div>\n                <div>戻る</div>\n              </div>\n            )\n          }\n        />\n      )}\n      <div\n        id=\"debug\"\n        css={[\n          tw`rounded-t-md bg-gray-800 text-white fixed bottom-0 left-0 right-0 h-48 p-4 text-sm shadow-md`,\n          debugOpen ? tw`block` : tw`hidden`,\n        ]}\n      >\n        <div\n          css={[tw`absolute top-4 right-4 cursor-pointer`]}\n          onClick={() => {\n            setDebugOpen(false);\n            setDebug('');\n          }}\n        >\n          <svg style={{ width: '18px', height: '18px' }} viewBox=\"0 0 24 24\">\n            <path fill=\"#eee\" d={mdiCloseCircle} />\n          </svg>\n        </div>\n        <div css={[tw`overflow-y-scroll w-full h-full`]}>{debug}</div>\n      </div>\n      <div css={[tw`absolute top-4 left-auto right-4 hidden sm:block`]}>\n        <Clock />\n      </div>\n      {modelLoaded && <Sidenav communityURL={model.community} />}\n      <a href=\"//beta.owntwin.com\" css={[tw`cursor-pointer`]}>\n        <div\n          className=\"logo\"\n          css={[\n            tw`absolute bottom-4 left-auto right-4 opacity-75 font-bold text-white bg-gray-500 rounded px-3 py-2`,\n          ]}\n        >\n          <div>OwnTwin</div>\n        </div>\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalStyles } from 'twin.macro';\nimport { Provider } from 'jotai';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}