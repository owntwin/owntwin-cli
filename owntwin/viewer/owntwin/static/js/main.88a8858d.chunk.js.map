{"version":3,"sources":["lib/store.js","lib/util.js","Terrain.js","Layer.js","Building.js","ModelView.js","Sidenav.js","ItemInfo.js","Clock.js","DetailView.js","model.js","App.js","index.js"],"names":["layersStateAtom","atom","entityAtom","detailEntityAtom","debugAtom","sm","SphericalMercator","RES","SHIFT","coordToPixel","lng","lat","z","mx","my","Math","log","tan","PI","res","coordToPlane","model","planeWidth","planeHeight","canvas","width","height","bbox","minlng","minlat","minx","miny","px","py","xyz","maxlng","maxlat","w","maxX","minX","size","h","maxY","minY","pixelToPlane","x","y","planeToCoord","console","planeToPixel","atan","exp","pixelToCoord","scaleCoord","coordToLocalPlane","ratioW","ratioH","TerrainContext","createContext","segments","BlankPlane","color","useContext","ModelContext","useState","coords","setCoords","useAtom","store","debug","setDebug","useEffect","onDoubleClick","ev","shiftKey","stopPropagation","intersections","length","point","coord","util","val","join","args","polygonOffset","polygonOffsetFactor","Terrain","levelmap","props","vertices","setVertices","geom","useUpdate","geometry","i","v","pos","verticesNeedUpdate","Array","from","ref","Provider","value","current","children","loader","SVGLoader","loadSVG","url","a","load","Promise","resolve","then","data","widthSVG","xml","viewBox","baseVal","heightSVG","paths","pathPoints","toShapes","forEach","shape","points","getPoints","map","p","push","catch","err","error","SVGMeshLayer","lines","setLines","visible","setVisible","terrain","svg","_lines","_points","THREE","setFromPoints","scale","merged","BufferGeometryUtils","mergeBufferGeometries","side","depthWrite","obj","setFromObject","getSize","position","set","translateX","translateY","line","getAttribute","array","floor","getTerrainAltitude","setAttribute","Float32Array","PNGLayer","texture","useLoader","transparent","opacity","Layer","def","basePath","path","URL","toString","format","fallback","Popup","item","style","minWidth","type","name","Building","base","depth","onPointerDown","useMemo","originLng","originLat","origin","moveTo","slice","reverse","lineTo","extrudeSettings","steps","bevelEnabled","hover","setHover","document","body","cursor","onClick","onPointerOver","onPointerOut","attach","pointerEvents","DefaultCamera","makeDefault","up","fov","aspect","window","innerWidth","innerHeight","near","far","blankTerrain","axios","get","resp","blankBuilding","routes","buildings","building","ModelView","setLevelmap","setBuildings","completeModel","layerState","setEntity","setDetailEntity","colorManagement","pixelRatio","min","devicePixelRatio","gl","powerPreference","antialias","useBridge","Object","values","modules","reduce","acc","module","concat","layers","layer","id","enabled","target","minDistance","maxDistance","maxPolarAngle","Sidenav","communityURL","href","rel","fill","d","mdiHelpCircleOutline","mdiAccountGroup","requestFullscreen","mdiFullscreen","getField","entity","key","encodeURIComponent","ModulePane","isOpen","paneOpen","setPaneOpen","moduleInfoOpen","setModuleInfoOpen","layersState","setLayersState","actions","filters","mdiInformationOutline","description","license","missingFields","params","param","default_param","preventDefault","mdiOpenInNew","text","checked","onChange","state","assign","ItemInfo","iri","back","helpClicked","setHelpClicked","maxHeight","zIndex","mdiMenuUp","mdiMenuDown","entries","Clock","date","setDate","tick","_date","Date","toLocaleString","year","month","day","hour","minute","timer","setInterval","clearInterval","floors","floorN","floorHeight","floorsMetadata","floorGeom","floorGroup","activeFloor","setActiveFloor","anchorHover","setAnchorHover","anchorActive","setAnchorActive","floorMetadata","anchors","anchorGroup","j","userData","display","fontSize","fontWeight","position-z","metadata","ratio","center","getCenter","wireframe","DetailView","entityComponent","community","getModel","location","URLSearchParams","search","has","defaultModel","_basePath","App","setModel","modelLoaded","setModelLoaded","detailEntity","setItem","debugOpen","setDebugOpen","type_label","transitionRef","useRef","className","Transition","nodeRef","in","timeout","includes","mdiArrowLeftThinCircleOutline","mdiCloseCircle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88a8858d.chunk.js","sourcesContent":["import { atom } from 'jotai';\n\nconst layersStateAtom = atom({});\nconst entityAtom = atom(null);\nconst detailEntityAtom = atom(null);\nconst debugAtom = atom(null);\n\nexport { layersStateAtom, entityAtom, detailEntityAtom, debugAtom };\n","/*! Partly derived from https://gist.github.com/maptiler/fddb5ce33ba995d5523de9afdf8ef118 */\n\nimport SphericalMercator from '@mapbox/sphericalmercator';\n\nconst sm = new SphericalMercator();\n\nconst RES = 156543.03392804097;\nconst SHIFT = 20037508.342789244;\n\nfunction planeToPixel(model, x, y) {\n  const z = 18;\n\n  let xyz = sm.xyz(\n    [\n      model.bbox.minlng,\n      model.bbox.minlat,\n      model.bbox.maxlng,\n      model.bbox.maxlat,\n    ],\n    z,\n    true,\n  );\n\n  let w = (xyz.maxX - xyz.minX + 1) * sm.size,\n    h = (xyz.maxY - xyz.minY + 1) * sm.size;\n\n  let px = (x + model.canvas.width / 2) * (w / model.canvas.width),\n    py = (y + model.canvas.height / 2) * (h / model.canvas.height);\n  // let px = (x + model.canvas.width / 2) * (w / model.canvas.width),\n  //   py = (-y + model.canvas.height / 2) * (h / model.canvas.height);\n\n  return [px, py];\n}\n\nfunction pixelToPlane(model, px, py) {\n  const z = 18;\n\n  let xyz = sm.xyz(\n    [\n      model.bbox.minlng,\n      model.bbox.minlat,\n      model.bbox.maxlng,\n      model.bbox.maxlat,\n    ],\n    z,\n    true,\n  );\n\n  let w = (xyz.maxX - xyz.minX + 1) * sm.size,\n    h = (xyz.maxY - xyz.minY + 1) * sm.size;\n\n  let x = px * model.canvas.width / w - model.canvas.width / 2,\n    y = py * model.canvas.height / h - model.canvas.height / 2;\n  // let x = px * (model.canvas.width / w) - model.canvas.width / 2,\n  //   y = -(py * (model.canvas.height / h) - model.canvas.height / 2);\n\n  return [x, y];\n}\n\nfunction coordToPixel(lng, lat, z) {\n  let mx = (lng * SHIFT) / 180.0;\n  let my =\n    Math.log(Math.tan(((90 + lat) * Math.PI) / 360.0)) / (Math.PI / 180.0);\n  my = (my * SHIFT) / 180.0;\n\n  const res = RES / 2 ** z;\n  const px = (mx + SHIFT) / res;\n  const py = (my + SHIFT) / res;\n\n  return [px, py];\n}\n\nfunction pixelToCoord(px, py, z) {\n  const res = RES / 2 ** z;\n\n  const mx = px * res - SHIFT;\n  const my = py * res - SHIFT;\n\n  let lng = (mx / SHIFT) * 180.0;\n  let lat = (my / SHIFT) * 180.0;\n  lat =\n    (180 / Math.PI) *\n    (2 * Math.atan(Math.exp((lat * Math.PI) / 180.0)) - Math.PI / 2.0);\n\n  return [lng, lat];\n}\n\nfunction coordToPlane(model, lng, lat, planeWidth, planeHeight) {\n  planeWidth = planeWidth || model.canvas.width;\n  planeHeight = planeHeight || model.canvas.height;\n\n  const z = 18;\n\n  let [minx, miny] = coordToPixel(model.bbox.minlng, model.bbox.minlat, z);\n  let [absx, absy] = coordToPixel(lng, lat, z);\n  // let [minx, miny] = sm.px([model.bbox.minlng, model.bbox.maxlat], z);\n  // let [absx, absy] = sm.px([lng, lat], z);\n  let px = absx - minx,\n    py = absy - miny;\n\n  // console.log([lng, lat], [px, py]);\n\n  let [x, y] = pixelToPlane(model, px, py);\n\n  return { x, y };\n}\n\nfunction planeToCoord(model, x, y) {\n  const z = 18;\n  // let _x = x,\n  //   _y = y;\n\n  console.log([x, y]);\n\n  [x, y] = planeToPixel(model, x, y);\n  let [minx, miny] = coordToPixel(model.bbox.minlng, model.bbox.minlat, z);\n  // let [minx, miny] = sm.px([model.bbox.minlng, model.bbox.maxlat], z);\n  let absx = minx + x,\n    absy = miny + y;\n\n  let [lng, lat] = pixelToCoord(absx, absy, z);\n  // let [lng, lat] = sm.ll([absx, absy], z);\n\n  return { lng, lat };\n}\n\nfunction scaleCoord(x) {\n  return x * 10000; // 1000000;\n}\n\nfunction coordToLocalPlane(model, lng, lat, planeWidth, planeHeight) {\n  planeWidth = planeWidth || model.canvas.width;\n  planeHeight = planeHeight || model.canvas.height;\n  let bboxW = scaleCoord(model.bbox.maxlng) - scaleCoord(model.bbox.minlng);\n  let bboxH = scaleCoord(model.bbox.maxlat) - scaleCoord(model.bbox.minlat);\n  let ratioW = planeWidth / bboxW;\n  let ratioH = planeHeight / bboxH;\n  let rellng = scaleCoord(lng) - scaleCoord(model.bbox.minlng);\n  let rellat = scaleCoord(lat) - scaleCoord(model.bbox.minlat);\n  let w = rellng * ratioW;\n  let h = rellat * ratioH;\n  // console.log(\n  //   bboxW,\n  //   bboxH,\n  //   ratioW,\n  //   ratioH,\n  //   rellng,\n  //   rellat,\n  //   w,\n  //   h,\n  //   w - model.canvas.width / 2,\n  //   h - model.canvas.height / 2,\n  // );\n  return {\n    x: w - planeWidth / 2,\n    y: h - planeHeight / 2,\n  };\n}\n\nfunction localPlaneToCoord(model, x, y) {\n  let bboxW = model.bbox.maxlng - model.bbox.minlng;\n  let bboxH = model.bbox.maxlat - model.bbox.minlat;\n  let ratioW = bboxW / model.canvas.width;\n  let ratioH = bboxH / model.canvas.height;\n  let lng = (x + model.canvas.width / 2) * ratioW;\n  let lat = (y + model.canvas.height / 2) * ratioH;\n  return {\n    lng: model.bbox.minlng + lng,\n    lat: model.bbox.minlat + lat,\n  };\n}\n\nexport { coordToPlane, planeToCoord, coordToLocalPlane, localPlaneToCoord };\n","import { createContext, useContext, useEffect, useState } from 'react';\nimport { useUpdate } from 'react-three-fiber';\n// import { Plane } from '@react-three/drei';\n// import { CameraHelper } from 'three';\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\n// import tw from 'twin.macro';\n\nimport { ModelContext } from './ModelView';\nimport * as util from './lib/util';\n\nexport const TerrainContext = createContext();\n\nconst width = 1024,\n  height = 1024;\nconst segments = 100;\nconst terrainLevelZoom = 2;\n\nfunction BlankPlane({ width, height, color, ...props }) {\n  const { model } = useContext(ModelContext);\n\n  const [coords, setCoords] = useState([]);\n\n  const [debug, setDebug] = useAtom(store.debugAtom);\n\n  useEffect(() => {\n    if (!debug) setCoords([]);\n  }, [debug]);\n\n  return (\n    <mesh\n      onDoubleClick={(ev) => {\n        if (ev.shiftKey) {\n          ev.stopPropagation();\n          // console.log({ intersections: ev.intersections });\n          if (ev.intersections.length > 0) {\n            let point = ev.intersections[0].point;\n            // console.log(point);\n            let coord = util.planeToCoord(model, point.x, point.y);\n            // setCoords((val) => [...val, `[${coord.lat}, ${coord.lng}, 0]`]);\n            setCoords((val) => [...val, `[${coord.lng}, ${coord.lat}]`]);\n            setDebug(`[${coords.join(', ')}]`);\n          }\n        }\n      }}\n    >\n      <planeBufferGeometry args={[width, height]} />\n      <meshBasicMaterial\n        color={color || 0xf1f3f5}\n        polygonOffset={true}\n        polygonOffsetFactor={1}\n      />\n    </mesh>\n  );\n}\n\nfunction Terrain({ levelmap, ...props }) {\n  const [vertices, setVertices] = useState(null);\n\n  const geom = useUpdate(\n    (geometry) => {\n      let zoom = terrainLevelZoom;\n      for (let i = 0; i < levelmap.length; i++) {\n        let v = levelmap[i];\n        let pos = v[0] + segments * (segments - 1 - v[1]);\n        geometry.vertices[pos].z = v[2] * zoom;\n      }\n      geometry.verticesNeedUpdate = true;\n      setVertices(Array.from(geometry.vertices));\n    },\n    [levelmap],\n  );\n\n  return (\n    <>\n      <BlankPlane width={width} height={height} />\n      <mesh>\n        <planeGeometry\n          ref={geom}\n          args={[width, height, segments - 1, segments - 1]}\n        />\n        <meshBasicMaterial color={0xf8f9fa} />\n      </mesh>\n      <TerrainContext.Provider\n        value={{ geometry: geom.current, vertices: vertices }} // should be geom?\n      >\n        {props.children}\n      </TerrainContext.Provider>\n    </>\n  );\n}\n\nexport default Terrain;\n","import {\n  useContext,\n  useEffect,\n  // useRef,\n  useState,\n  Suspense,\n} from 'react';\nimport { useUpdate, useLoader } from 'react-three-fiber';\n\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils';\nimport * as THREE from 'three';\n\nimport { TerrainContext } from './Terrain';\n\nconst width = 1024,\n  height = 1024;\nconst segments = 100;\n\nconst loader = new SVGLoader();\n\nasync function loadSVG(url) {\n  const load = () =>\n    new Promise((resolve) => {\n      loader.load(url, resolve);\n    });\n\n  return await load()\n    .then((data) => {\n      const widthSVG = data.xml.viewBox.baseVal.width;\n      const heightSVG = data.xml.viewBox.baseVal.height;\n      const paths = data.paths;\n      let pathPoints = [];\n\n      for (let i = 0; i < paths.length; i++) {\n        let path = paths[i];\n\n        const shapes = path.toShapes(true);\n\n        shapes.forEach((shape) => {\n          let points = shape.getPoints();\n\n          points = points.map((p) => {\n            let x = p.x;\n            if (x >= widthSVG) x = widthSVG - 1;\n            let y = heightSVG - p.y;\n            if (y < 0) y = 0;\n            if (y >= heightSVG) y = heightSVG - 1;\n            p.x = x;\n            p.y = y;\n            return p;\n          });\n\n          pathPoints.push(points);\n        });\n      }\n\n      return { pathPoints: pathPoints, width: widthSVG, height: heightSVG };\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n}\n\nfunction SVGMeshLayer({ url, ...props }) {\n  const [lines, setLines] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  const terrain = useContext(TerrainContext);\n\n  useEffect(() => {\n    (async () => {\n      const svg = await loadSVG(url);\n\n      let _lines = [];\n\n      svg.pathPoints.forEach((points, i) => {\n        let _points = [];\n        points.forEach((p, i) => {\n          if (i > 0) {\n            _points.push(points[i - 1]);\n            _points.push(p);\n          }\n        });\n        const geometry = new THREE.BufferGeometry().setFromPoints(_points);\n        geometry.scale(width / svg.width, height / svg.height, 1);\n        _lines.push(geometry);\n      });\n\n      let merged = BufferGeometryUtils.mergeBufferGeometries(_lines);\n\n      setLines([\n        <lineSegments key={0} geometry={merged}>\n          <meshBasicMaterial\n            color={0xdadce0}\n            side={THREE.DoubleSide}\n            depthWrite={false}\n            // depthTest={false}\n          />\n        </lineSegments>,\n      ]);\n    })();\n  }, [url]);\n\n  const ref = useUpdate(\n    (obj) => {\n      let bbox = new THREE.Box3().setFromObject(obj);\n      let size = bbox.getSize(new THREE.Vector3());\n      obj.position.set(0, 0, 0);\n      obj.translateX(-size.x / 2);\n      obj.translateY(-size.y / 2);\n\n      function getTerrainAltitude(x, y) {\n        if (!terrain.vertices) return 0;\n        let pos =\n          Math.floor(x / (width / segments)) +\n          segments * (segments - 1 - Math.floor(y / (height / segments)));\n        if (pos < 0 || terrain.vertices.length <= pos) {\n          // console.log(x, y, pos);\n          return 0;\n        }\n        return terrain.vertices[pos].z;\n      }\n\n      // terrain\n      obj.children.forEach((line) => {\n        let position = line.geometry.getAttribute('position');\n        let vertices = [];\n        vertices = position.array.map((v, i) => {\n          if (i % 3 === 2) {\n            let z =\n              getTerrainAltitude(position.array[i - 2], position.array[i - 1]) +\n              2;\n            return z;\n          } else {\n            return v;\n          }\n        });\n        line.geometry.setAttribute(\n          'position',\n          new THREE.BufferAttribute(new Float32Array(vertices), 3),\n        );\n      });\n\n      setVisible(true);\n    },\n    [lines, terrain.vertices],\n  );\n\n  return (\n    <group ref={ref} visible={visible}>\n      {lines}\n    </group>\n  );\n}\n\nfunction PNGLayer({ url, ...props }) {\n  const terrain = useContext(TerrainContext);\n\n  const texture = useLoader(THREE.TextureLoader, url);\n\n  return (\n    <mesh geometry={terrain.geometry}>\n      <meshBasicMaterial\n        map={texture}\n        transparent={true}\n        color={0xffffff}\n        opacity={props.opacity ? props.opacity : 0.5}\n      />\n    </mesh>\n  );\n}\n\nfunction Layer({ def, basePath, ...props }) {\n  if (basePath) {\n    def.path = basePath ? (new URL(def.path, basePath)).toString() : def.path;\n  }\n  if (def.format === 'svg') {\n    return <SVGMeshLayer url={def.path} />;\n  } else if (def.format === 'png') {\n    return (\n      <Suspense fallback={null}>\n        <PNGLayer url={def.path} opacity={0.5} />\n      </Suspense>\n    );\n  }\n}\n\nexport default Layer;\n","import { useContext, useEffect, useMemo, useState } from 'react';\nimport * as THREE from 'three';\nimport { Html } from '@react-three/drei';\nimport tw from 'twin.macro';\n\nimport * as util from './lib/util';\n\nimport { ModelContext } from './ModelView';\n\nfunction Popup({ item, ...props }) {\n  return (\n    <div\n      css={[tw`bg-white border rounded py-2 px-3`]}\n      style={{ minWidth: '200px' }}\n    >\n      <div css={[tw`text-xs`]}>{item.type}</div>\n      <div>{item.name}</div>\n      <div css={[tw`mt-3 text-xs text-gray-600`]}>クリックで拡大</div>\n    </div>\n  );\n}\n\nfunction Building({ base, z, depth, onPointerDown, ...props }) {\n  const { model } = useContext(ModelContext);\n\n  const shape = useMemo(() => new THREE.Shape(), []);\n\n  let originLng = base[0][0],\n    originLat = base[0][1];\n\n  let origin = util.coordToPlane(model, originLng, originLat);\n  shape.moveTo(0, 0);\n\n  base.slice().reverse().forEach((v) => {\n    let p = util.coordToPlane(model, v[0], v[1]);\n    shape.lineTo(p.x - origin.x, p.y - origin.y);\n  });\n\n  const geom = useMemo(() => {\n    let extrudeSettings = {\n      steps: 1,\n      depth: depth || 50,\n      bevelEnabled: false,\n    };\n    return new THREE.ExtrudeBufferGeometry(shape, extrudeSettings);\n  }, [shape, depth]);\n\n  const [hover, setHover] = useState(false);\n\n  const color = {\n    default: 0xf1f3f4,\n    hover: 0x666666,\n  };\n\n  useEffect(() => {\n    document.body.style.cursor = hover ? 'pointer' : 'auto';\n  }, [hover]);\n\n  return (\n    <mesh\n      position={[origin.x, origin.y, z]}\n      geometry={geom}\n      onClick={props.onClick}\n      onPointerDown={onPointerDown}\n      onPointerOver={(ev) => {\n        ev.stopPropagation();\n        setHover(true);\n      }}\n      onPointerOut={(ev) => setHover(false)}\n    >\n      <meshLambertMaterial color={hover ? color.hover : color.default} />\n      <lineSegments>\n        <edgesGeometry attach=\"geometry\" args={[geom, 45]} />\n        <lineBasicMaterial color={0xcccccc} attach=\"material\" />\n      </lineSegments>\n      <Html style={{ pointerEvents: 'none' }}>\n        {hover && <Popup item={{ name: props.name, type: props.type }} />}\n      </Html>\n    </mesh>\n  );\n}\n\nexport default Building;\n","import { useEffect, createContext, useState } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei';\n// import { CameraHelper } from 'three';\nimport axios from 'axios';\n\nimport { useAtom, Bridge, useBridge } from 'jotai';\nimport * as store from './lib/store';\n\nimport Terrain from './Terrain';\nimport Layer from './Layer';\nimport Building from './Building';\n\nexport const ModelContext = createContext();\n\nfunction DefaultCamera({ ...props }) {\n  // const camera = useRef();\n  // useHelper(camera, CameraHelper, 1, 'hotpink');\n\n  return (\n    <PerspectiveCamera\n      makeDefault\n      up={[0, 0, 1]}\n      position={[0, -800 * 1.2, 400 * 1.2]}\n      fov={60}\n      aspect={window.innerWidth / window.innerHeight}\n      near={1}\n      far={2048}\n      // ref={camera}\n    />\n  );\n}\n\nasync function completeModel(model, base) {\n  const blankTerrain = [];\n\n  if (model.terrain && model.terrain.path) {\n    model.terrain.path = base\n      ? new URL(model.terrain.path, base).toString()\n      : model.terrain.path;\n    model.terrain.data = await axios\n      .get(model.terrain.path)\n      .then((resp) => resp.data)\n      .catch(() => blankTerrain);\n  } else {\n    model.terrain = model.terrain || {};\n    model.terrain.data = blankTerrain;\n  }\n\n  const blankBuilding = {\n    routes: [],\n    buildings: [],\n  };\n\n  if (model.building && model.building.path) {\n    model.building.path = base\n      ? new URL(model.building.path, base).toString()\n      : model.building.path;\n    model.building.data = await axios\n      .get(model.building.path)\n      .then((resp) => resp.data)\n      .catch(() => blankBuilding);\n  } else {\n    model.building = model.building || {};\n    model.building.data = blankBuilding;\n  }\n\n  return model;\n}\n\nfunction ModelView({ model, basePath, ...props }) {\n  // console.log({ model: JSON.stringify(model) });\n\n  const [levelmap, setLevelmap] = useState([]);\n  const [buildings, setBuildings] = useState([]);\n\n  useEffect(() => {\n    completeModel(model, basePath).then((model) => {\n      setLevelmap(model.terrain.data);\n      setBuildings(model.building.data.buildings);\n    });\n  }, [model, basePath]);\n\n  const [layerState] = useAtom(store.layersStateAtom);\n  const [, setEntity] = useAtom(store.entityAtom);\n  const [, setDetailEntity] = useAtom(store.detailEntityAtom);\n\n  return (\n    <Canvas\n      colorManagement={false}\n      pixelRatio={Math.min(2, window.devicePixelRatio)}\n      gl={{ powerPreference: 'default', antialias: false }}\n    >\n      <DefaultCamera />\n      <ambientLight args={[0xffffff, 1]} />\n      <pointLight position={[10, 10, 10]} />\n      <Bridge value={useBridge()}>\n        <ModelContext.Provider value={{ model: model }}>\n          <Terrain levelmap={levelmap}>\n            {Object.values(model.modules)\n              .reduce((acc, module) => acc.concat(module.layers), [])\n              .map((layer) =>\n                layerState[layer.id] && layerState[layer.id].enabled ? (\n                  <Layer key={layer.id} def={layer} basePath={basePath} />\n                ) : null,\n              )}\n            {buildings.map((building) => (\n              <Building\n                key={building.id}\n                base={building.base}\n                z={building.z}\n                depth={building.depth}\n                name={building.name}\n                type={building.type}\n                onPointerDown={(ev) => {\n                  ev.stopPropagation();\n                  setEntity(building);\n                  setDetailEntity(building);\n                }}\n              />\n            ))}\n          </Terrain>\n        </ModelContext.Provider>\n        )\n      </Bridge>\n      <OrbitControls\n        target={[0, 0, 0]}\n        minDistance={100}\n        maxDistance={1500}\n        maxPolarAngle={Math.PI / 2 - 0.1}\n      />\n    </Canvas>\n  );\n}\n\nexport default ModelView;\n","// import { useState } from 'react';\nimport { mdiHelpCircleOutline, mdiAccountGroup, mdiFullscreen } from '@mdi/js';\nimport tw from 'twin.macro';\n\nfunction Sidenav({ communityURL, ...props }) {\n  const HELP_URL = 'https://beta.owntwin.com/docs/about';\n\n  return (\n    <div css={[tw`fixed bottom-4 left-4 flex items-center h-10`]}>\n      <div css={[tw`mr-3 flex items-center`]}>\n        <a href={HELP_URL} target=\"_blank\" rel=\"noreferrer\">\n          <svg style={{ width: '24px', height: '24px' }} viewBox=\"0 0 24 24\">\n            <path fill=\"#000000\" d={mdiHelpCircleOutline} />\n          </svg>\n        </a>\n      </div>\n      {!!communityURL && (\n        <div css={[tw`mr-3 flex items-center`]}>\n          <a href={communityURL} target=\"_blank\" rel=\"noreferrer\">\n            <svg style={{ width: '24px', height: '24px' }} viewBox=\"0 0 24 24\">\n              <path fill=\"#000000\" d={mdiAccountGroup} />\n            </svg>\n          </a>\n        </div>\n      )}\n      <div css={[tw`flex items-center`]}>\n        <button\n          css={[tw`focus:outline-none`]}\n          onClick={() => {\n            document.body.requestFullscreen();\n          }}\n        >\n          <svg style={{ width: '24px', height: '24px' }} viewBox=\"0 0 24 24\">\n            <path fill=\"#000000\" d={mdiFullscreen} />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidenav;\n","import { useState } from 'react';\n\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\nimport tw from 'twin.macro';\nimport {\n  // mdiChevronUp, mdiChevronDown,\n  mdiMenuUp,\n  mdiMenuDown,\n  mdiInformationOutline,\n  mdiOpenInNew,\n} from '@mdi/js';\n\nfunction getField(entity, key) {\n  return entity && entity[key] ? encodeURIComponent(entity[key]) : null;\n}\n\nfunction ModulePane({ module, isOpen, ...props }) {\n  const [paneOpen, setPaneOpen] = useState(isOpen || false);\n  const [moduleInfoOpen, setModuleInfoOpen] = useState(false);\n\n  const [layersState, setLayersState] = useAtom(store.layersStateAtom);\n  const [entity] = useAtom(store.entityAtom);\n\n  const layers = module.layers;\n  const actions = module.actions || [];\n  const filters = [];\n\n  return (\n    <div css={[tw`border-b`]}>\n      <div\n        css={[tw`px-3 py-2 cursor-pointer hover:bg-blue-100 flex flex-col`]}\n        onClick={(ev) => {\n          setPaneOpen(!paneOpen);\n        }}\n      >\n        <div css={[tw`flex items-center`]}>\n          <div css={[tw`flex-grow`]}>{module.name}</div>\n          <div css={[tw`flex items-center`]}>\n            <div\n              css={[tw`rounded p-1 hover:bg-blue-200`]}\n              onClick={(ev) => {\n                if (paneOpen) {\n                  ev.stopPropagation();\n                  setModuleInfoOpen(!moduleInfoOpen);\n                } else {\n                  setModuleInfoOpen(true);\n                }\n              }}\n            >\n              <svg\n                css={[tw`fill-current text-gray-600`]}\n                style={{ width: '18px', height: '18px' }}\n                viewBox=\"0 0 24 24\"\n              >\n                <path d={mdiInformationOutline} />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n      {paneOpen && (\n        <div css={[tw`px-3 pb-3 text-sm`]}>\n          {moduleInfoOpen && (\n            <div css={[tw`mb-2 mt-1`]}>\n              <div css={[tw`my-1`]}>説明</div>\n              <div css={[tw`p-2 text-sm bg-gray-100 rounded`]}>\n                <pre css={[tw`break-words whitespace-pre-wrap`]}>\n                  {module.description || (\n                    <span css={[tw`text-gray-600`]}>未登録</span>\n                  )}\n                </pre>\n              </div>\n              <div css={[tw`mt-2 mb-1`]}>利用条件</div>\n              <div css={[tw`p-2 text-sm bg-gray-100 rounded`]}>\n                <pre css={[tw`break-words whitespace-pre-wrap`]}>\n                  {module.license || (\n                    <span css={[tw`text-gray-600`]}>未登録</span>\n                  )}\n                </pre>\n              </div>\n            </div>\n          )}\n          <div css={[tw`mb-2`]}>\n            <div css={[tw`my-1`]}>アクション</div>\n            <ul>\n              {actions.length > 0 ? (\n                actions.map((item, i) => {\n                  let missingFields = [];\n                  if (!item.href) {\n                    missingFields.push('href');\n                  }\n                  if (!!item.params) {\n                    item.params.forEach(([param, key]) => {\n                      let ok = getField(entity, key) !== null;\n                      if (!ok) {\n                        missingFields.push(key);\n                      }\n                    });\n                  }\n\n                  function href() {\n                    let params = item.params\n                      ? item.params.map(([param, key]) => {\n                          return `${param}=${getField(entity, key) || ''}`;\n                        })\n                      : [];\n                    return `${item.href}?${\n                      item.default_param ? `${item.default_param}&` : ''\n                    }${params.join('&')}`;\n                  }\n\n                  return (\n                    <li key={i}>\n                      <a\n                        href={href()}\n                        onClick={(ev) => {\n                          if (missingFields.length > 0) {\n                            ev.preventDefault();\n                            return false;\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        css={[\n                          tw`flex items-center cursor-pointer hover:text-gray-800`,\n                        ]}\n                      >\n                        <svg\n                          css={[tw`fill-current text-black mr-0.5`]}\n                          style={{ width: '14px', height: '14px' }}\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path d={mdiOpenInNew} />\n                        </svg>\n                        <div\n                          css={[\n                            missingFields.length > 0 ? tw`line-through` : null,\n                          ]}\n                        >\n                          {item.text}\n                        </div>\n                      </a>\n                      {missingFields.length > 0 && (\n                        <div\n                          css={[\n                            tw`bg-gray-500 text-white rounded px-1 py-0.5 mb-0.5 text-xs`,\n                          ]}\n                        >\n                          情報を追加してください:{' '}\n                          <code>{missingFields.join(', ')}</code>\n                        </div>\n                      )}\n                    </li>\n                  );\n                })\n              ) : (\n                <li>\n                  <span css={[tw`text-gray-600`]}>未登録</span>\n                </li>\n              )}\n            </ul>\n          </div>\n          <div css={[tw`mb-2`]}>\n            <div css={[tw`my-1`]}>レイヤー</div>\n            <ul>\n              {layers.length > 0 ? (\n                layers.map((item, i) => {\n                  return (\n                    <li key={i}>\n                      <input\n                        css={[tw`mr-1`]}\n                        type=\"checkbox\"\n                        checked={layersState[item.id].enabled}\n                        onChange={(ev) => {\n                          setLayersState((state) => {\n                            state[item.id].enabled = !state[item.id].enabled;\n                            return Object.assign({}, state);\n                          });\n                        }}\n                      />\n                      {item.name}\n                    </li>\n                  );\n                })\n              ) : (\n                <li>\n                  <span css={[tw`text-gray-600`]}>未登録</span>\n                </li>\n              )}\n            </ul>\n          </div>\n          <div css={[tw`mb-2`]}>\n            <div css={[tw`my-1`]}>フィルター</div>\n            <ul>\n              {filters.length > 0 ? (\n                filters.map((item, i) => (\n                  <li key={i}>\n                    <span css={[tw`text-gray-600`]}>{item.name}</span>\n                  </li>\n                ))\n              ) : (\n                <li>\n                  <span css={[tw`text-gray-600`]}>未登録</span>\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction ItemInfo({ name, type, iri, item, modules, isOpen, back, ...props }) {\n  const [paneOpen, setPaneOpen] = useState(isOpen || false);\n  const [helpClicked, setHelpClicked] = useState(false);\n  const description = item.description || null;\n\n  return (\n    <div\n      css={[\n        tw`fixed top-4 left-4 flex flex-col bg-white shadow rounded right-4 sm:right-auto sm:w-72`,\n        paneOpen ? tw`bottom-20` : tw`bottom-auto`,\n      ]}\n      style={{ ...props.style, maxHeight: '40rem', zIndex: '20000000' }}\n    >\n      <div>\n        {back}\n        <div css={[back ? tw`border-t` : null, tw`py-2 px-3 rounded bg-white`]}>\n          <div css={[tw`text-xs`]}>{type}</div>\n          <div>{name}</div>\n          <div css={[tw`text-xs text-gray-600 break-all`]}>\n            {iri ? iri : '未登録'}\n          </div>\n        </div>\n      </div>\n      <div\n        css={[\n          tw`border-t flex justify-center cursor-pointer py-1 hover:bg-gray-100`,\n        ]}\n        onClick={() => {\n          setPaneOpen(!paneOpen);\n          !helpClicked && setHelpClicked(true);\n        }}\n      >\n        <div css={[tw`text-xs text-gray-800 flex items-center`]}>\n          <svg\n            css={[tw`fill-current text-gray-600`]}\n            style={{ width: '18px', height: '18px' }}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d={paneOpen ? mdiMenuUp : mdiMenuDown} />\n          </svg>\n          {!helpClicked && <div>クリックで開く/閉じる</div>}\n        </div>\n      </div>\n      <div\n        css={[\n          paneOpen ? tw`block` : tw`hidden`,\n          tw`flex-grow overflow-y-scroll`,\n        ]}\n      >\n        <div css={[tw`mt-0 px-2 py-1 text-xs text-gray-800`]}>\n          インフォメーション\n        </div>\n        <div css={[tw`border rounded-sm py-2 px-3 m-2 mt-0`]}>\n          <div css={[tw`text-sm`, !description && tw`text-gray-600`]}>\n            {description ? description : '未登録'}\n          </div>\n        </div>\n        <div css={[tw`py-2`]}>\n          <div css={[tw`px-2 py-1 border-b text-xs text-gray-800`]}>\n            モジュール\n          </div>\n          {Object.entries(modules).map(([id, module]) => (\n            <ModulePane key={id} module={module} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemInfo;\n","import { useEffect, useState } from 'react';\nimport tw from 'twin.macro';\n\nfunction Clock({ ...props }) {\n  const [date, setDate] = useState();\n\n  useEffect(() => {\n    tick();\n    let timer = setInterval(() => tick(), 1000 * 30);\n\n    return function cleanup() {\n      clearInterval(timer);\n    };\n  });\n\n  function tick() {\n    let _date = new Date().toLocaleString('ja-JP', {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n    setDate(_date);\n  }\n\n  return (\n    <div css={[tw`flex items-center`]}>\n      <div css={[tw`bg-white shadow rounded py-2 px-3 select-none`]}>{date}</div>\n    </div>\n  );\n}\n\nexport default Clock;\n","import {\n  useEffect,\n  useMemo,\n  createContext,\n  //  useRef,\n  useState,\n} from 'react';\nimport { Canvas, useUpdate } from 'react-three-fiber';\nimport { OrbitControls, PerspectiveCamera, Html } from '@react-three/drei';\nimport * as THREE from 'three';\n// import { CameraHelper } from 'three';\n\nimport { useAtom, Bridge, useBridge } from 'jotai';\nimport * as store from './lib/store';\nimport * as util from './lib/util';\n\nexport const ModelContext = createContext();\n\nfunction DefaultCamera({ ...props }) {\n  // const camera = useRef();\n  // useHelper(camera, CameraHelper, 1, 'hotpink');\n\n  return (\n    <PerspectiveCamera\n      makeDefault\n      up={[0, 0, 1]}\n      position={[0, -800 * 0.5, 400 * 0.5]}\n      fov={60}\n      aspect={window.innerWidth / window.innerHeight}\n      near={1}\n      far={2048}\n      // ref={camera}\n    />\n  );\n}\n\nfunction BlankPlane({ width, height, color, ...props }) {\n  return (\n    <mesh>\n      <planeBufferGeometry args={[width, height]} />\n      <meshBasicMaterial\n        color={color || 0xf1f3f5}\n        polygonOffset={true}\n        polygonOffsetFactor={1}\n      />\n    </mesh>\n  );\n}\n\nfunction Building({ model, base, depth, floor, floors, ...props }) {\n  const planeWidth = 250,\n    planeHeight = 250;\n\n  const [entity, setEntity] = useAtom(store.entityAtom);\n\n  const shape = useMemo(() => new THREE.Shape(), []);\n\n  let originLng = base[0][0],\n    originLat = base[0][1];\n\n  let origin = util.coordToLocalPlane(\n    model,\n    originLng,\n    originLat,\n    planeWidth,\n    planeHeight,\n  );\n  shape.moveTo(0, 0);\n\n  base.forEach((v) => {\n    let p = util.coordToLocalPlane(model, v[0], v[1], planeWidth, planeHeight);\n    shape.lineTo(p.x - origin.x, p.y - origin.y);\n  });\n\n  const geom = useMemo(() => {\n    const extrudeSettings = {\n      steps: 1,\n      depth: (depth || 50) * 0.2, // TODO: Fix\n      bevelEnabled: false,\n    };\n    return new THREE.ExtrudeBufferGeometry(shape, extrudeSettings);\n  }, [shape, depth]);\n\n  /* Floors */\n  let floorN = floor || 1;\n  let floorHeight = ((depth || 50) * 0.2) / floorN;\n  let floorsMetadata = floors ? floors : {};\n\n  const floorGeom = useMemo(() => new THREE.ShapeBufferGeometry(shape), [\n    shape,\n  ]);\n\n  let floorGroup = [];\n  const [activeFloor, setActiveFloor] = useState(null);\n  const [hover, setHover] = useState(null);\n  const [anchorHover, setAnchorHover] = useState(null);\n  const [anchorActive, setAnchorActive] = useState(null);\n\n  useEffect(() => {\n    if (entity.id !== anchorActive) {\n      setAnchorActive(null);\n    }\n  }, [entity.id, anchorActive]);\n\n  useEffect(() => {\n    document.body.style.cursor = hover || anchorHover ? 'pointer' : 'auto';\n  }, [hover, anchorHover]);\n\n  for (let i = 0; i < floorN; i++) {\n    let floorMetadata = floorsMetadata[`${i + 1}`] || {\n      texture: null,\n      anchors: [],\n    };\n    floorMetadata['n'] = `${i + 1}`;\n\n    const anchorGroup = floorMetadata.anchors.map((v, j) => {\n      // console.log(v);\n\n      let p = util.coordToLocalPlane(\n        model,\n        v.position.lng,\n        v.position.lat,\n        planeWidth,\n        planeHeight,\n      );\n\n      return (\n        <mesh\n          key={j}\n          position={[p.x - origin.x, p.y - origin.y, floorHeight / 2]}\n          userData={{ data: v }}\n          visible={activeFloor === null || activeFloor === i + 1}\n        >\n          <sphereBufferGeometry args={[0.1, 20, 20]} />\n          <meshBasicMaterial color={0x2196f3} />\n          <mesh\n            name=\"hitbox\"\n            visible={activeFloor === null || activeFloor === i + 1}\n            onPointerOver={(ev) => {\n              ev.stopPropagation();\n              activeFloor === i + 1 && setAnchorHover(v.id);\n            }}\n            onPointerOut={(ev) => {\n              ev.stopPropagation();\n              anchorHover === v.id && setAnchorHover(null);\n            }}\n            onPointerDown={(ev) => {\n              if (activeFloor !== i + 1 || !anchorHover === v.id) return;\n              ev.stopPropagation();\n              // TODO: Switch on click\n              // setLocalEntity(v);\n              setEntity(v);\n              setAnchorActive(v.id);\n            }}\n          >\n            <sphereBufferGeometry args={[1, 20, 20]} />\n            <meshBasicMaterial\n              visible={anchorHover === v.id || anchorActive === v.id}\n              color={0x2196f3}\n              opacity={0.5}\n              transparent={true}\n            />\n          </mesh>\n          <Html style={{ pointerEvents: 'none' }}>\n            <div\n              style={{\n                display:\n                  activeFloor === null || activeFloor === i + 1\n                    ? 'block'\n                    : 'none',\n                fontSize: '0.75rem',\n                fontWeight:\n                  anchorHover === v.id || anchorActive === v.id ? 'bold' : null,\n                width: '10rem',\n              }}\n            >\n              {v.name}\n            </div>\n          </Html>\n        </mesh>\n      );\n    });\n\n    let floor = (\n      <mesh\n        key={i}\n        position-z={floorHeight * i}\n        geometry={floorGeom}\n        userData={{ metadata: floorMetadata }}\n        onPointerDown={(ev) => {\n          if (!!anchorHover) return;\n          if (activeFloor === i + 1) {\n            ev.stopPropagation();\n            setActiveFloor(null);\n          } else if (activeFloor === null) {\n            ev.stopPropagation();\n            setActiveFloor(i + 1);\n          }\n        }}\n        onPointerOver={(ev) => {\n          if (activeFloor === null || activeFloor === i + 1) {\n            ev.stopPropagation();\n            setHover(i + 1);\n          }\n        }}\n        onPointerOut={(ev) => {\n          if (activeFloor === null || activeFloor === i + 1) {\n            ev.stopPropagation();\n            setHover(null);\n          }\n        }}\n        visible={activeFloor === null || activeFloor === i + 1}\n      >\n        <meshBasicMaterial\n          color={hover === i + 1 ? 0xaaaaaa : 0xf1f3f4}\n          side={THREE.DoubleSide}\n          visible={activeFloor === null || activeFloor === i + 1}\n        />\n        <lineSegments>\n          <edgesGeometry attach=\"geometry\" args={[floorGeom]} />\n          <lineBasicMaterial color={0xcccccc} attach=\"material\" />\n        </lineSegments>\n        <group name=\"anchors\">{anchorGroup}</group>\n      </mesh>\n    );\n\n    floorGroup.push(floor);\n  }\n\n  const ref = useUpdate((obj) => {\n    const bbox = new THREE.Box3().setFromObject(obj);\n    const size = bbox.getSize(new THREE.Vector3());\n\n    const ratio = Math.min(\n      (planeWidth - 32) / size.x,\n      (planeHeight - 32) / size.y,\n    );\n\n    obj.scale.set(ratio, ratio, ratio);\n\n    const center = bbox.getCenter(new THREE.Vector3());\n    obj.translateX(-center.x * ratio);\n    obj.translateY(-center.y * ratio);\n  }, []);\n\n  return (\n    <mesh ref={ref} position={[0, 0, 0]} geometry={geom}>\n      <meshLambertMaterial wireframe={true} visible={false} />\n      <lineSegments>\n        <edgesGeometry attach=\"geometry\" args={[geom, 45]} />\n        <lineBasicMaterial color={0xcccccc} attach=\"material\" />\n      </lineSegments>\n      <group name=\"floors\">{floorGroup}</group>\n    </mesh>\n  );\n}\n\nfunction DetailView({ model, type, entity, ...props }) {\n  let entityComponent;\n\n  if (entityComponent) entityComponent = null;\n\n  if (!!entity && type === 'building') {\n    entityComponent = (\n      <Building\n        key={entity.id}\n        model={model}\n        base={entity.base}\n        depth={entity.depth}\n        floor={entity.floor}\n        floors={entity.floors}\n      />\n    );\n  }\n\n  return (\n    <Canvas\n      colorManagement={false}\n      pixelRatio={Math.min(2, window.devicePixelRatio)}\n      gl={{ powerPreference: 'default', antialias: false }}\n    >\n      <DefaultCamera />\n      <ambientLight args={[0xffffff, 1]} />\n      <pointLight position={[10, 10, 10]} />\n      {/* <ModelContext.Provider value={{ model }}>\n      </ModelContext.Provider> */}\n      <BlankPlane width={250} height={250} />\n      <Bridge value={useBridge()}>{entityComponent}</Bridge>\n      <OrbitControls\n        target={[0, 0, 0]}\n        minDistance={100}\n        maxDistance={500}\n        maxPolarAngle={Math.PI / 2 - 0.1}\n      />\n    </Canvas>\n  );\n}\n\nexport default DetailView;\n","const model = {\n  id: null,\n  name: null,\n  type: null,\n  iri: null,\n  url: null,\n  community: null,\n  description: null,\n  bbox: {\n    minlng: 139.647216796875,\n    minlat: 35.550105335885505,\n    maxlng: 139.658203125,\n    maxlat: 35.55904339525895,\n  },\n  canvas: {\n    width: 1024,\n    height: 1024,\n  },\n  terrain: null,\n  building: null,\n  modules: {},\n};\n\nexport { model };\n","import { useEffect, useRef, useState } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\nimport axios from 'axios';\n\nimport ModelView from './ModelView';\nimport Sidenav from './Sidenav';\nimport ItemInfo from './ItemInfo';\nimport Clock from './Clock';\nimport DetailView from './DetailView';\n\nimport tw from 'twin.macro';\nimport './App.css';\nimport { mdiArrowLeftThinCircleOutline, mdiCloseCircle } from '@mdi/js';\n\nimport { model as defaultModel } from './model';\n\n// const DEBUG = false;\n\nasync function getModel() {\n  let model, basePath, path;\n  const url = new URL(window.location);\n  const params = new URLSearchParams(url.search);\n  // TODO: Debug only\n  if (params.has('twin')) {\n    basePath = params.get('twin');\n    path = new URL('./twin.json', basePath);\n  } else {\n    basePath = null;\n    path = './twin.json';\n  }\n  model = await axios\n    .get(path)\n    .then((resp) => resp.data)\n    .catch(() => defaultModel);\n  model._basePath = basePath;\n\n  if (params.has('no-terrain')) {\n    model.terrain = null;\n  }\n\n  model.bbox = {\n    minlng: model.bbox[0],\n    minlat: model.bbox[1],\n    maxlng: model.bbox[2],\n    maxlat: model.bbox[3],\n  };\n\n  return model;\n}\n\nfunction App() {\n  const [model, setModel] = useState({\n    id: null,\n    name: null,\n    type: null,\n    iri: null,\n    description: null,\n    modules: [],\n  });\n  const [modelLoaded, setModelLoaded] = useState(false);\n\n  const [, setLayersState] = useAtom(store.layersStateAtom);\n\n  const [entity, setEntity] = useAtom(store.entityAtom);\n  const [detailEntity, setDetailEntity] = useAtom(store.detailEntityAtom);\n  const [item, setItem] = useState({});\n\n  const [debugOpen, setDebugOpen] = useState(false);\n  const [debug, setDebug] = useAtom(store.debugAtom);\n\n  useEffect(() => {\n    (async () => {\n      let model = await getModel();\n      setModel(model);\n      setModelLoaded(true);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (!!debug) setDebugOpen(true);\n  }, [debug]);\n\n  useEffect(() => {\n    setLayersState(() => {\n      return Object.values(model.modules)\n        .reduce((acc, module) => acc.concat(module.layers), [])\n        .reduce((acc, layer) => {\n          acc[`${layer.id}`] = { enabled: layer.enabled };\n          return acc;\n        }, {});\n    });\n  }, [setLayersState, model.modules]);\n\n  useEffect(() => {\n    !entity && model && model.id && setEntity(model);\n    if (!entity) return;\n    setItem({\n      name: entity.name,\n      type: entity.type_label || entity.type,\n      iri: entity.iri,\n      description: entity.description,\n    });\n  }, [entity, setEntity, model]);\n\n  const transitionRef = useRef(null);\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{ display: !detailEntity ? 'block' : 'none' }}\n        css={[tw`absolute top-0 bottom-0 left-0 right-0`]}\n      >\n        {modelLoaded && <ModelView model={model} basePath={model._basePath} />}\n      </div>\n      <Transition nodeRef={transitionRef} in={!!detailEntity} timeout={1}>\n        {(state) => (\n          <div\n            ref={transitionRef}\n            className=\"detail-view\"\n            css={[\n              tw`absolute top-0 bottom-0 left-0 right-0`,\n              ['entering', 'entered'].includes(state) ? tw`block` : tw`hidden`,\n            ]}\n          >\n            <div\n              style={{\n                width: '100%',\n                height: '100%',\n                display: state === 'entered' ? 'block' : 'none',\n              }}\n            >\n              {modelLoaded && (\n                <DetailView\n                  model={model}\n                  type={'building'}\n                  entity={detailEntity}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </Transition>\n      {modelLoaded && (\n        <ItemInfo\n          name={item.name}\n          type={item.type}\n          iri={item.iri}\n          item={item}\n          modules={model.modules}\n          back={\n            detailEntity && (\n              <div\n                css={[\n                  tw`text-sm text-gray-600 px-2 py-2 cursor-pointer flex items-center bg-gray-50 hover:bg-gray-100`,\n                ]}\n                onClick={() => {\n                  if (detailEntity.id === entity.id) {\n                    setDetailEntity(null);\n                    setEntity(null);\n                  } else {\n                    setEntity(detailEntity);\n                  }\n                }}\n              >\n                <div css={[tw`mr-1`]}>\n                  <svg\n                    style={{ width: '18px', height: '18px' }}\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path fill=\"#888\" d={mdiArrowLeftThinCircleOutline} />\n                  </svg>\n                </div>\n                <div>戻る</div>\n              </div>\n            )\n          }\n        />\n      )}\n      <div\n        id=\"debug\"\n        css={[\n          tw`rounded-t-md bg-gray-800 text-white fixed bottom-0 left-0 right-0 h-48 p-4 text-sm shadow-md`,\n          debugOpen ? tw`block` : tw`hidden`,\n        ]}\n      >\n        <div\n          css={[tw`absolute top-4 right-4 cursor-pointer`]}\n          onClick={() => {\n            setDebugOpen(false);\n            setDebug('');\n          }}\n        >\n          <svg style={{ width: '18px', height: '18px' }} viewBox=\"0 0 24 24\">\n            <path fill=\"#eee\" d={mdiCloseCircle} />\n          </svg>\n        </div>\n        <div css={[tw`overflow-y-scroll w-full h-full`]}>{debug}</div>\n      </div>\n      <div css={[tw`absolute top-4 left-auto right-4 hidden sm:block`]}>\n        <Clock />\n      </div>\n      {modelLoaded && <Sidenav communityURL={model.community} />}\n      <a href=\"//beta.owntwin.com\" css={[tw`cursor-pointer`]}>\n        <div\n          className=\"logo\"\n          css={[\n            tw`absolute bottom-4 left-auto right-4 opacity-75 font-bold text-white bg-gray-500 rounded px-3 py-2`,\n          ]}\n        >\n          <div>OwnTwin</div>\n        </div>\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalStyles } from 'twin.macro';\nimport { Provider } from 'jotai';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}