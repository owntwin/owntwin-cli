{"version":3,"sources":["lib/store.js","lib/util.js","Terrain.js","layers/PNGLayer.js","layers/SVGMeshLayer.js","layers/GeoJSONLayer.js","Anchor.js","layers/CSVLayer.js","Layer.js","Building.js","addon/discuss/components/Comment.js","addon/discuss/index.js","addon/discuss/store.js","addon/discuss/components/Discuss.js","ModelView.js","addon/discuss/components/Input.js","Sidenav.js","ItemInfo.js","Clock.js","DetailView.js","model.js","App.js","index.js"],"names":["layersStateAtom","atom","entityAtom","detailEntityAtom","debugAtom","closeupAtom","sm","SphericalMercator","RES","EXTENT_SHIFT","canvas","coordToPixel","lng","lat","z","mx","my","Math","log","tan","PI","res","coordToPlane","bbox","planeWidth","planeHeight","minlng","minlat","minx","miny","px","py","xyz","maxlng","maxlat","w","maxX","minX","size","h","maxY","minY","pixelToPlane","x","y","planeToCoord","planeToPixel","atan","exp","pixelToCoord","scaleCoord","coordToLocalPlane","ratioW","ratioH","getTerrainAltitude","terrain","vertices","pos","floor","length","TerrainContext","createContext","segments","util","BlankPlane","width","height","color","model","useContext","ModelContext","useState","setCoords","useAtom","store","debug","setDebug","useEffect","onDoubleClick","ev","shiftKey","stopPropagation","intersections","point","coord","val","coords","join","args","polygonOffset","polygonOffsetFactor","Terrain","levelmap","zoom","props","setVertices","geom","useRef","useLayoutEffect","positionAttribute","current","getAttribute","forEach","v","array","setAttribute","BufferAttribute","Float32Array","Array","from","ref","Provider","value","geometry","children","PNGLayer","url","texture","useLoader","THREE","map","transparent","opacity","loader","SVGLoader","loadSVG","a","load","Promise","resolve","then","data","widthSVG","xml","viewBox","baseVal","heightSVG","paths","pathPoints","i","toShapes","shape","points","getPoints","p","push","catch","err","console","error","SVGMeshLayer","lines","setLines","visible","setVisible","svg","_lines","_points","setFromPoints","scale","merged","BufferGeometryUtils","mergeBufferGeometries","side","depthWrite","setFromObject","getSize","position","set","translateX","translateY","line","GeoJSONLayer","clip","geojson","setGeojson","axios","get","resp","useMemo","geometries","features","feature","originLng","coordinates","originLat","origin","poly","depth","moveTo","slice","reverse","lineTo","extrudeSettings","steps","bevelEnabled","translate","extrudePolygonGeometry","properties","attributes","measuredHeight","BeamAnchor","label","labelVisibility","closeup","rotateX","Html","style","pointerEvents","display","fontSize","fontWeight","Anchor","parseFloat","CSVLayer","setData","_data","records","parse","columns","skip_empty_lines","record","keys","Layer","def","basePath","path","URL","toString","format","fallback","Popup","item","minWidth","type","name","Building","base","onPointerDown","hover","setHover","document","body","cursor","onClick","onPointerOver","onPointerOut","attach","CommentPrompt","transform","distanceFactor","d","mdiPencilOutline","mdiDotsHorizontal","Comment","content","maxWidth","m","window","location","pathname","match","twinId","socket","io","process","transports","client","feathers","configure","socketio","commentPromptInitialValue","enabledAtom","statusAtom","commentPromptAtom","commentsAtom","Discuss","comments","commentPrompt","setCommentPrompt","useThree","scene","raycaster","enabled","setEnabled","setStatus","service","create","uid","connect","on","off","onPointerMissed","intersects","intersectObjects","closest","comment","DefaultCamera","PerspectiveCamera","makeDefault","up","fov","aspect","innerWidth","innerHeight","near","far","ExtendedOrbitControls","setCloseup","camera","OrbitControls","target","minDistance","maxDistance","maxPolarAngle","onEnd","dist2","blankTerrain","blankBuilding","routes","buildings","building","ModelView","setLevelmap","setBuildings","completeModel","layersState","setEntity","setDetailEntity","id","linear","dpr","min","devicePixelRatio","gl","powerPreference","antialias","Object","values","modules","reduce","acc","module","concat","definition","layers","layer","Input","setValue","inputRef","setComments","focus","message","submit","placeholder","onChange","onKeyPress","key","preventDefault","mdiSend","DiscussButton","discussStore","status","fill","mdiCommentTextMultipleOutline","CONNECTED","ERROR","Sidenav","communityURL","href","rel","mdiHelpCircleOutline","mdiAccountGroup","requestFullscreen","webkitRequestFullscreen","call","mdiFullscreen","getField","entity","split","encodeURIComponent","ModulePane","isOpen","paneOpen","setPaneOpen","moduleInfoOpen","setModuleInfoOpen","setLayersState","actions","filters","mdiInformationOutline","description","license","action","getProperty","missingFields","fields","field","params","assign_to","param","default_param","mdiOpenInNew","text","checked","state","assign","ItemInfo","iri","back","helpClicked","setHelpClicked","maxHeight","zIndex","mdiMenuUp","mdiMenuDown","entries","Clock","date","setDate","tick","_date","Date","toLocaleString","year","month","day","hour","minute","timer","setInterval","clearInterval","floors","floorN","floorHeight","floorsMetadata","floorGeom","floorGroup","activeFloor","setActiveFloor","anchorHover","setAnchorHover","anchorActive","setAnchorActive","floorMetadata","anchors","anchorGroup","j","userData","position-z","metadata","ratio","center","getCenter","wireframe","DetailView","entityComponent","community","getModel","URLSearchParams","search","has","defaultModel","_basePath","Debug","debugOpen","setDebugOpen","mdiCloseCircle","App","setModel","modelLoaded","setModelLoaded","detailEntity","setItem","type_label","transitionRef","className","Transition","nodeRef","in","timeout","includes","mdiArrowLeftThinCircleOutline","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edbe9546.chunk.js","sourcesContent":["import { atom } from 'jotai';\n\nconst layersStateAtom = atom({});\nconst entityAtom = atom(null);\nconst detailEntityAtom = atom(null);\nconst debugAtom = atom(null);\n// const zoomAtom = atom(0xffff);\nconst closeupAtom = atom(false);\n\nexport { layersStateAtom, entityAtom, detailEntityAtom, debugAtom, closeupAtom };\n","/*! Partly derived from https://gist.github.com/maptiler/fddb5ce33ba995d5523de9afdf8ef118 */\n\nimport SphericalMercator from '@mapbox/sphericalmercator';\n\nconst sm = new SphericalMercator();\n\nconst RES = 156543.03392804097;\nconst EXTENT_SHIFT = 20037508.342789244;\n\n// TODO: Support variable size\nconst canvas = {\n  width: 1024,\n  height: 1024,\n  segments: 100,\n};\n\nfunction planeToPixel(bbox, x, y) {\n  const z = 18;\n\n  let xyz = sm.xyz(\n    [bbox.minlng, bbox.minlat, bbox.maxlng, bbox.maxlat],\n    z,\n    true,\n  );\n\n  let w = (xyz.maxX - xyz.minX + 1) * sm.size,\n    h = (xyz.maxY - xyz.minY + 1) * sm.size;\n\n  let px = (x + canvas.width / 2) * (w / canvas.width),\n    py = (y + canvas.height / 2) * (h / canvas.height);\n  // let px = (x + canvas.width / 2) * (w / canvas.width),\n  //   py = (-y + canvas.height / 2) * (h / canvas.height);\n\n  return [px, py];\n}\n\nfunction pixelToPlane(bbox, px, py) {\n  const z = 18;\n\n  let xyz = sm.xyz(\n    [bbox.minlng, bbox.minlat, bbox.maxlng, bbox.maxlat],\n    z,\n    true,\n  );\n\n  let w = (xyz.maxX - xyz.minX + 1) * sm.size,\n    h = (xyz.maxY - xyz.minY + 1) * sm.size;\n\n  let x = (px * canvas.width) / w - canvas.width / 2,\n    y = (py * canvas.height) / h - canvas.height / 2;\n  // let x = px * (canvas.width / w) - canvas.width / 2,\n  //   y = -(py * (canvas.height / h) - canvas.height / 2);\n\n  return [x, y];\n}\n\nfunction coordToPixel(lng, lat, z) {\n  let mx = (lng * EXTENT_SHIFT) / 180.0;\n  let my =\n    Math.log(Math.tan(((90 + lat) * Math.PI) / 360.0)) / (Math.PI / 180.0);\n  my = (my * EXTENT_SHIFT) / 180.0;\n\n  const res = RES / 2 ** z;\n  const px = (mx + EXTENT_SHIFT) / res;\n  const py = (my + EXTENT_SHIFT) / res;\n\n  return [px, py];\n}\n\nfunction pixelToCoord(px, py, z) {\n  const res = RES / 2 ** z;\n\n  const mx = px * res - EXTENT_SHIFT;\n  const my = py * res - EXTENT_SHIFT;\n\n  let lng = (mx / EXTENT_SHIFT) * 180.0;\n  let lat = (my / EXTENT_SHIFT) * 180.0;\n  lat =\n    (180 / Math.PI) *\n    (2 * Math.atan(Math.exp((lat * Math.PI) / 180.0)) - Math.PI / 2.0);\n\n  return [lng, lat];\n}\n\nfunction coordToPlane(bbox, lng, lat, planeWidth, planeHeight) {\n  planeWidth = planeWidth || canvas.width;\n  planeHeight = planeHeight || canvas.height;\n\n  const z = 18;\n\n  let [minx, miny] = coordToPixel(bbox.minlng, bbox.minlat, z);\n  let [absx, absy] = coordToPixel(lng, lat, z);\n  // let [minx, miny] = sm.px([bbox.minlng, bbox.maxlat], z);\n  // let [absx, absy] = sm.px([lng, lat], z);\n  let px = absx - minx,\n    py = absy - miny;\n\n  // console.log([lng, lat], [px, py]);\n\n  let [x, y] = pixelToPlane(bbox, px, py);\n\n  return { x, y };\n}\n\nfunction planeToCoord(bbox, x, y) {\n  const z = 18;\n  // let _x = x,\n  //   _y = y;\n\n  // console.log([x, y]);\n\n  [x, y] = planeToPixel(bbox, x, y);\n  let [minx, miny] = coordToPixel(bbox.minlng, bbox.minlat, z);\n  // let [minx, miny] = sm.px([bbox.minlng, bbox.maxlat], z);\n  let absx = minx + x,\n    absy = miny + y;\n\n  let [lng, lat] = pixelToCoord(absx, absy, z);\n  // let [lng, lat] = sm.ll([absx, absy], z);\n\n  return { lng, lat };\n}\n\nfunction scaleCoord(x) {\n  return x * 10000; // 1000000;\n}\n\nfunction coordToLocalPlane(bbox, lng, lat, planeWidth, planeHeight) {\n  planeWidth = planeWidth || canvas.width;\n  planeHeight = planeHeight || canvas.height;\n  let bboxW = scaleCoord(bbox.maxlng) - scaleCoord(bbox.minlng);\n  let bboxH = scaleCoord(bbox.maxlat) - scaleCoord(bbox.minlat);\n  let ratioW = planeWidth / bboxW;\n  let ratioH = planeHeight / bboxH;\n  let rellng = scaleCoord(lng) - scaleCoord(bbox.minlng);\n  let rellat = scaleCoord(lat) - scaleCoord(bbox.minlat);\n  let w = rellng * ratioW;\n  let h = rellat * ratioH;\n  // console.log(\n  //   bboxW,\n  //   bboxH,\n  //   ratioW,\n  //   ratioH,\n  //   rellng,\n  //   rellat,\n  //   w,\n  //   h,\n  //   w - canvas.width / 2,\n  //   h - canvas.height / 2,\n  // );\n  return {\n    x: w - planeWidth / 2,\n    y: h - planeHeight / 2,\n  };\n}\n\nfunction localPlaneToCoord(bbox, x, y) {\n  let bboxW = bbox.maxlng - bbox.minlng;\n  let bboxH = bbox.maxlat - bbox.minlat;\n  let ratioW = bboxW / canvas.width;\n  let ratioH = bboxH / canvas.height;\n  let lng = (x + canvas.width / 2) * ratioW;\n  let lat = (y + canvas.height / 2) * ratioH;\n  return {\n    lng: bbox.minlng + lng,\n    lat: bbox.minlat + lat,\n  };\n}\n\nfunction getTerrainAltitude(terrain, x, y) {\n  if (!terrain.vertices) return 0;\n  let pos =\n    Math.floor(x / (canvas.width / canvas.segments)) +\n    canvas.segments *\n      (canvas.segments - 1 - Math.floor(y / (canvas.height / canvas.segments)));\n  if (pos < 0 || terrain.vertices.length <= pos) {\n    // console.log(x, y, pos);\n    return 0;\n  }\n  return terrain.vertices[pos * 3 + 2]; // pos.z\n}\n\nexport {\n  canvas,\n  coordToPlane,\n  planeToCoord,\n  coordToLocalPlane,\n  localPlaneToCoord,\n  getTerrainAltitude,\n};\n","import {\n  createContext,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\n// import { Plane } from '@react-three/drei';\nimport {\n  // CameraHelper,\n  BufferAttribute,\n} from 'three';\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\n// import tw from 'twin.macro';\n\nimport { ModelContext } from './ModelView';\nimport * as util from './lib/util';\n\nexport const TerrainContext = createContext();\n\nconst segments = util.canvas.segments;\n\nfunction BlankPlane({ width, height, color, ...props }) {\n  // const { model } = useContext(ModelContext);\n  const _model = useContext(ModelContext);\n  const model = _model.model; // TODO: Fix\n\n  const [, setCoords] = useState([]);\n\n  const [debug, setDebug] = useAtom(store.debugAtom);\n\n  useEffect(() => {\n    if (!debug) setCoords([]);\n  }, [debug]);\n\n  return (\n    <mesh // TODO: model && <mesh ?\n      onDoubleClick={(ev) => {\n        if (ev.shiftKey) {\n          ev.stopPropagation();\n          // console.log({ intersections: ev.intersections });\n          if (ev.intersections.length > 0) {\n            let point = ev.intersections[0].point;\n            // console.log(point);\n            let coord = util.planeToCoord(model.bbox, point.x, point.y);\n            // setCoords((val) => [...val, `[${coord.lat}, ${coord.lng}, 0]`]);\n            setCoords((val) => {\n              let coords = [...val, `[${coord.lng}, ${coord.lat}]`];\n              setDebug(`[${coords.join(', ')}]`);\n              return coords;\n            });\n          }\n        }\n      }}\n    >\n      <planeGeometry args={[width, height]} />\n      <meshBasicMaterial\n        color={color || 0xf1f3f5}\n        polygonOffset={true}\n        polygonOffsetFactor={1}\n      />\n    </mesh>\n  );\n}\n\nfunction Terrain({ levelmap, zoom, width, height, ...props }) {\n  const [vertices, setVertices] = useState(null);\n\n  const geom = useRef();\n  useLayoutEffect(() => {\n    const positionAttribute = geom.current.getAttribute('position');\n\n    levelmap.forEach((v) => {\n      const pos = v[0] + segments * (segments - 1 - v[1]);\n      positionAttribute.array[pos * 3 + 2] = v[2] * zoom; // pos.z\n    });\n\n    // console.log(positionAttribute);\n    geom.current.setAttribute(\n      'position',\n      new BufferAttribute(new Float32Array(positionAttribute.array), 3),\n    );\n    setVertices(Array.from(positionAttribute.array));\n  }, [levelmap, zoom]);\n\n  return (\n    <>\n      <BlankPlane width={width} height={height} />\n      <mesh>\n        <planeGeometry\n          ref={geom}\n          args={[width, height, segments - 1, segments - 1]}\n        />\n        <meshBasicMaterial color={0xf8f9fa} />\n      </mesh>\n      <TerrainContext.Provider\n        value={{ geometry: geom.current, vertices: vertices }} // should be geom?\n      >\n        {props.children}\n      </TerrainContext.Provider>\n    </>\n  );\n}\n\nexport default Terrain;\n","import { useContext } from 'react';\nimport { useLoader } from '@react-three/fiber';\n\nimport * as THREE from 'three';\n\nimport { TerrainContext } from '../Terrain';\n\nfunction PNGLayer({ url, ...props }) {\n  const terrain = useContext(TerrainContext);\n\n  const texture = useLoader(THREE.TextureLoader, url);\n\n  return (\n    <mesh geometry={terrain.geometry}>\n      <meshBasicMaterial\n        map={texture}\n        transparent={true}\n        color={0xffffff}\n        opacity={props.opacity ? props.opacity : 0.5}\n      />\n    </mesh>\n  );\n}\n\nexport default PNGLayer;\n","import {\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils';\nimport * as THREE from 'three';\n\nimport { TerrainContext } from '../Terrain';\nimport * as util from '../lib/util';\n\nconst width = util.canvas.width,\n  height = util.canvas.height;\nconst segments = util.canvas.segments;\n\nconst loader = new SVGLoader();\n\nasync function loadSVG(url) {\n  const load = () =>\n    new Promise((resolve) => {\n      loader.load(url, resolve);\n    });\n\n  return await load()\n    .then((data) => {\n      const widthSVG = data.xml.viewBox.baseVal.width;\n      const heightSVG = data.xml.viewBox.baseVal.height;\n      const paths = data.paths;\n      let pathPoints = [];\n\n      for (let i = 0; i < paths.length; i++) {\n        let path = paths[i];\n\n        const shapes = path.toShapes(true);\n\n        shapes.forEach((shape) => {\n          let points = shape.getPoints();\n\n          points = points.map((p) => {\n            let x = p.x;\n            if (x >= widthSVG) x = widthSVG - 1;\n            let y = heightSVG - p.y;\n            if (y < 0) y = 0;\n            if (y >= heightSVG) y = heightSVG - 1;\n            p.x = x;\n            p.y = y;\n            return p;\n          });\n\n          pathPoints.push(points);\n        });\n      }\n\n      return { pathPoints: pathPoints, width: widthSVG, height: heightSVG };\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n}\n\nfunction SVGMeshLayer({ url, ...props }) {\n  const [lines, setLines] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  const terrain = useContext(TerrainContext);\n\n  useEffect(() => {\n    (async () => {\n      const svg = await loadSVG(url);\n\n      let _lines = [];\n\n      svg.pathPoints.forEach((points, i) => {\n        let _points = [];\n        points.forEach((p, i) => {\n          if (i > 0) {\n            _points.push(points[i - 1]);\n            _points.push(p);\n          }\n        });\n        const geometry = new THREE.BufferGeometry().setFromPoints(_points);\n        geometry.scale(width / svg.width, height / svg.height, 1);\n        _lines.push(geometry);\n      });\n\n      let merged = BufferGeometryUtils.mergeBufferGeometries(_lines);\n\n      setLines([\n        <lineSegments key={0} geometry={merged}>\n          <meshBasicMaterial\n            color={0xdadce0}\n            side={THREE.DoubleSide}\n            depthWrite={false}\n            // depthTest={false}\n          />\n        </lineSegments>,\n      ]);\n    })();\n  }, [url]);\n\n  const ref = useRef();\n  useLayoutEffect(() => {\n    let bbox = new THREE.Box3().setFromObject(ref.current);\n    let size = bbox.getSize(new THREE.Vector3());\n    ref.current.position.set(0, 0, 0);\n    ref.current.translateX(-size.x / 2);\n    ref.current.translateY(-size.y / 2);\n\n    function getTerrainAltitude(x, y) {\n      if (!terrain.vertices) return 0;\n      let pos =\n        Math.floor(x / (width / segments)) +\n        segments * (segments - 1 - Math.floor(y / (height / segments)));\n      if (pos < 0 || terrain.vertices.length <= pos) {\n        // console.log(x, y, pos);\n        return 0;\n      }\n      return terrain.vertices[pos * 3 + 2]; // pos.z\n    }\n\n    // terrain\n    ref.current.children.forEach((line) => {\n      let position = line.geometry.getAttribute('position');\n      let vertices = [];\n      vertices = position.array.map((v, i) => {\n        if (i % 3 === 2) {\n          let z =\n            getTerrainAltitude(position.array[i - 2], position.array[i - 1]) +\n            2;\n          return z;\n        } else {\n          return v;\n        }\n      });\n      line.geometry.setAttribute(\n        'position',\n        new THREE.BufferAttribute(new Float32Array(vertices), 3),\n      );\n    });\n\n    setVisible(true);\n  }, [lines, terrain.vertices]);\n\n  return (\n    <group ref={ref} visible={visible}>\n      {lines}\n    </group>\n  );\n}\n\nexport default SVGMeshLayer;\n","import { useContext, useEffect, useMemo, useState } from 'react';\n\nimport axios from 'axios';\n\nimport * as THREE from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils';\n\nimport * as util from '../lib/util';\n\nimport { TerrainContext } from '../Terrain';\nimport { ModelContext } from '../ModelView';\n\nfunction extrudePolygonGeometry({ coordinates, bbox, terrain, ...props }) {\n  const depth = props.height / 2;\n\n  // TODO: Support hole (coordinate[1])\n  coordinates = coordinates[0];\n\n  const originLng = coordinates[0][0],\n    originLat = coordinates[0][1];\n\n  const origin = util.coordToPlane(bbox, originLng, originLat);\n  // const z = 0; // coordinates[0][2]; // TODO: z from GeoJSON?\n  // TODO: Fix: terrain is [0,1023], origin.x/y is [-512,512]\n  const z =\n    util.getTerrainAltitude(\n      terrain,\n      origin.x + 1024 / 2,\n      origin.y + 1024 / 2,\n    ) || 0;\n\n  const shape = new THREE.Shape();\n\n  shape.moveTo(0, 0);\n  coordinates\n    .slice()\n    .reverse()\n    .forEach((v) => {\n      const p = util.coordToPlane(bbox, v[0], v[1]);\n      shape.lineTo(p.x - origin.x, p.y - origin.y);\n    });\n\n  const extrudeSettings = {\n    steps: 1,\n    depth: depth || 10,\n    bevelEnabled: false,\n  };\n  const geom = new THREE.ExtrudeBufferGeometry(shape, extrudeSettings);\n  geom.translate(origin.x, origin.y, z);\n\n  return geom;\n}\n\nfunction GeoJSONLayer({ url, clip = true, ...props }) {\n  const terrain = useContext(TerrainContext);\n  const { model } = useContext(ModelContext);\n  const [geojson, setGeojson] = useState(null);\n\n  /* load JSON from URL */\n  useEffect(() => {\n    !!url &&\n      (async () => {\n        const data = await axios.get(url).then((resp) => resp.data);\n        // console.log(data);\n        setGeojson(data);\n      })();\n  }, [url]);\n\n  const geom = useMemo(() => {\n    if (!geojson) return;\n\n    const geometries = [];\n    geojson.features.forEach((feature) => {\n      const originLng = feature.geometry.coordinates[0][0][0],\n        originLat = feature.geometry.coordinates[0][0][1];\n\n      const origin = util.coordToPlane(model.bbox, originLng, originLat);\n      if (\n        clip &&\n        (origin.x < -util.canvas.width / 2 ||\n          util.canvas.width / 2 <= origin.x ||\n          origin.y < -util.canvas.height / 2 ||\n          util.canvas.height / 2 <= origin.y)\n      )\n        return;\n\n      const poly = extrudePolygonGeometry({\n        coordinates: feature.geometry.coordinates,\n        bbox: model.bbox,\n        height: feature.properties.attributes.measuredHeight,\n        terrain: terrain,\n      });\n\n      geometries.push(poly);\n    });\n\n    const mergedGeometry = BufferGeometryUtils.mergeBufferGeometries(\n      geometries,\n      false,\n    );\n\n    // console.log(mergedGeometry);\n\n    return mergedGeometry;\n  }, [geojson, model.bbox, terrain, clip]); // TODO: Fix: model causes x4 calls\n\n  const color = {\n    default: 0xd1d5db, // 0x9ca3af, 0xb0b0b0, 0xff00ff, 0xc0c0c0\n    hover: 0x666666,\n  };\n\n  return (\n    <>\n      geom && (\n      <mesh geometry={geom}>\n        <meshBasicMaterial\n          color={color.default}\n          transparent={true}\n          opacity={props.opacity || 0.5}\n        />\n        {/* <lineSegments>\n          <edgesGeometry attach=\"geometry\" args={[geom, 45]} />\n          <lineBasicMaterial color={0xcccccc} attach=\"material\" />\n        </lineSegments> */}\n      </mesh>\n      )\n    </>\n  );\n}\n\nexport default GeoJSONLayer;\n","import { useLayoutEffect, useRef } from 'react';\n\nimport { Html } from '@react-three/drei';\n\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\nfunction SphereAnchor({ position, label = null, ...props }) {\n  return (\n    <mesh position={position}>\n      <sphereBufferGeometry args={[40, 20, 20]} />\n      <meshBasicMaterial\n        color={props.color || 0x2196f3}\n        opacity={0.5}\n        transparent={true}\n      />\n      <Html style={{ pointerEvents: 'none' }}>\n        <div\n          style={{\n            display: true ? 'block' : 'none',\n            fontSize: '0.75rem',\n            fontWeight: 'normal',\n            width: '10rem',\n            color: 'rgb(156 163 175)',\n          }}\n        >\n          {label}\n        </div>\n      </Html>\n    </mesh>\n  );\n}\n\nfunction BeamAnchor({\n  position,\n  label = null,\n  labelVisibility = 'auto',\n  height = 256,\n  ...props\n}) {\n  // const mesh = useRef(null);\n  const geom = useRef(null);\n\n  const [closeup] = useAtom(store.closeupAtom);\n\n  useLayoutEffect(() => {\n    geom.current.rotateX(Math.PI / 2); // TODO: Use lookAt\n    geom.current.translate(0, 0, height / 2);\n  }, [height]);\n\n  // useLayoutEffect(() => {\n  //   // mesh.current.rotateX(Math.PI / 2);\n  //   mesh.current.up.set(0, 0, 1);\n  //   mesh.current.lookAt(0, 0, mesh.current.position.z);\n  //   mesh.current.position.z = height / 2;\n  // }, []);\n\n  return (\n    <mesh position={position}>\n      <cylinderBufferGeometry ref={geom} args={[5, 5, height, 8]} />\n      <meshBasicMaterial\n        color={props.color || 0x2196f3}\n        opacity={0.5}\n        transparent={true}\n      />\n      <Html style={{ pointerEvents: 'none' }}>\n        <div\n          style={{\n            display: labelVisibility === 'always' || closeup ? 'block' : 'none',\n            fontSize: '0.75rem',\n            fontWeight: 'normal',\n            width: '10rem',\n            color: 'rgb(156 163 175)',\n          }}\n        >\n          {label}\n        </div>\n      </Html>\n    </mesh>\n  );\n}\n\nexport { SphereAnchor, BeamAnchor };\n\n// export default function Anchor({ ...props }) {\n// return (\n//   <mesh\n//     key={j}\n//     position={[p.x - origin.x, p.y - origin.y, floorHeight / 2]}\n//     userData={{ data: v }}\n//     visible={activeFloor === null || activeFloor === i + 1}\n//   >\n//     <sphereBufferGeometry args={[0.1, 20, 20]} />\n//     <meshBasicMaterial color={0x2196f3} />\n//     <mesh\n//       name=\"hitbox\"\n//       visible={activeFloor === null || activeFloor === i + 1}\n//       onPointerOver={(ev) => {\n//         ev.stopPropagation();\n//         activeFloor === i + 1 && setAnchorHover(v.id);\n//       }}\n//       onPointerOut={(ev) => {\n//         ev.stopPropagation();\n//         anchorHover === v.id && setAnchorHover(null);\n//       }}\n//       onPointerDown={(ev) => {\n//         if (activeFloor !== i + 1 || !anchorHover === v.id) return;\n//         ev.stopPropagation();\n//         // TODO: Switch on click\n//         // setLocalEntity(v);\n//         setEntity(v);\n//         setAnchorActive(v.id);\n//       }}\n//     >\n//       <sphereBufferGeometry args={[1, 20, 20]} />\n//       <meshBasicMaterial\n//         visible={anchorHover === v.id || anchorActive === v.id}\n//         color={0x2196f3}\n//         opacity={0.5}\n//         transparent={true}\n//       />\n//     </mesh>\n//     <Html style={{ pointerEvents: 'none' }}>\n//       <div\n//         style={{\n//           display:\n//             activeFloor === null || activeFloor === i + 1 ? 'block' : 'none',\n//           fontSize: '0.75rem',\n//           fontWeight:\n//             anchorHover === v.id || anchorActive === v.id ? 'bold' : null,\n//           width: '10rem',\n//         }}\n//       >\n//         {v.name}\n//       </div>\n//     </Html>\n//   </mesh>\n// );\n// }\n","import { useContext, useEffect, useState } from 'react';\n\nimport axios from 'axios';\n\nimport * as util from '../lib/util';\n\nimport { TerrainContext } from '../Terrain';\nimport { ModelContext } from '../ModelView';\n\nimport {\n  // SphereAnchor,\n  BeamAnchor,\n} from '../Anchor';\n\nimport { parse } from 'csv-parse/lib/sync';\n\nfunction Anchor({\n  coordinates,\n  bbox,\n  terrain,\n  label = null,\n  labelVisibility = 'auto',\n  clip = true,\n  size = {},\n  ...props\n}) {\n  const originLng = parseFloat(coordinates[0]),\n    originLat = parseFloat(coordinates[1]);\n\n  const origin = util.coordToPlane(bbox, originLng, originLat);\n  // const z = 0; // coordinates[0][2]; // TODO: z from GeoJSON?\n  // TODO: Fix: terrain is [0,1023], origin.x/y is [-512,512]\n  const z =\n    util.getTerrainAltitude(\n      terrain,\n      origin.x + 1024 / 2,\n      origin.y + 1024 / 2,\n    ) || 0;\n\n  // const geom = new THREE.SphereBufferGeometry(1, 20, 20);\n  // geom.translate(origin.x, origin.y, z);\n\n  // console.log(coordinates, origin, [origin.x, origin.y, z]);\n\n  // NOTE: Clip off-terrain anchors\n  // TODO: Fix\n  if (\n    clip &&\n    (origin.x < -util.canvas.width / 2 ||\n      util.canvas.width / 2 <= origin.x ||\n      origin.y < -util.canvas.height / 2 ||\n      util.canvas.height / 2 <= origin.y)\n  )\n    return <></>;\n\n  return (\n    <BeamAnchor\n      position={[origin.x, origin.y, z]}\n      label={label}\n      labelVisibility={labelVisibility}\n      height={size.height}\n      color={props.color}\n    />\n  );\n}\n\nexport default function CSVLayer({ url, clip = true, ...props }) {\n  const terrain = useContext(TerrainContext);\n  const _model = useContext(ModelContext);\n  const model = _model.model; // TODO: Fix\n  const [data, setData] = useState(null);\n\n  /* load JSON from URL */\n  useEffect(() => {\n    !!url &&\n      (async () => {\n        const _data = await axios.get(url).then((resp) => resp.data);\n        // console.log(_data);\n        const records = parse(_data, {\n          columns: true,\n          skip_empty_lines: true,\n        });\n        // console.log(records);\n        setData(records);\n      })();\n  }, [url]);\n\n  return (\n    <group opacity={props.opacity ? props.opacity : 0.5}>\n      {data &&\n        model &&\n        terrain &&\n        data.map((record) => {\n          // console.log(record);\n          return (\n            <Anchor\n              clip={clip}\n              coordinates={[record[props.keys.lng], record[props.keys.lat]]}\n              bbox={model.bbox}\n              terrain={terrain}\n              label={record[props.keys.label]}\n              labelVisibility={props.labelVisibility}\n              color={props.color}\n              size={props.size}\n            />\n          );\n        })}\n    </group>\n  );\n}\n","import { Suspense } from 'react';\n\nimport PNGLayer from './layers/PNGLayer';\nimport SVGMeshLayer from './layers/SVGMeshLayer';\nimport GeoJSONLayer from './layers/GeoJSONLayer';\nimport CSVLayer from './layers/CSVLayer';\n\nfunction Layer({ def, basePath, ...props }) {\n  if (basePath) {\n    def.path = basePath ? new URL(def.path, basePath).toString() : def.path;\n  }\n  if (def.format === 'svg') {\n    return <SVGMeshLayer url={def.path} />;\n  } else if (def.format === 'png') {\n    return (\n      <Suspense fallback={null}>\n        <PNGLayer url={def.path} opacity={0.5} />\n      </Suspense>\n    );\n  } else if (def.format === 'geojson') {\n    return <GeoJSONLayer url={def.path} opacity={0.5} />;\n  } else if (def.format === 'csv') {\n    return (\n      <CSVLayer\n        url={def.path}\n        keys={def.keys}\n        color={def.color}\n        labelVisibility={def.labelVisibility}\n        size={def.size}\n        opacity={0.5}\n      />\n    );\n  }\n}\n\nexport default Layer;\n","import 'styled-components/macro';\nimport { useContext, useEffect, useMemo, useState } from 'react';\nimport * as THREE from 'three';\nimport { Html } from '@react-three/drei';\nimport tw from 'twin.macro';\n\nimport * as util from './lib/util';\n\nimport { ModelContext } from './ModelView';\n\nfunction Popup({ item, ...props }) {\n  return (\n    <div\n      css={[tw`bg-white border rounded py-2 px-3`]}\n      style={{ minWidth: '200px' }}\n    >\n      <div css={[tw`text-xs`]}>{item.type}</div>\n      <div>{item.name}</div>\n      <div css={[tw`mt-3 text-xs text-gray-600`]}>クリックで拡大</div>\n    </div>\n  );\n}\n\nfunction Building({ base, z, depth, onPointerDown, ...props }) {\n  const { model } = useContext(ModelContext);\n\n  const originLng = base[0][0],\n    originLat = base[0][1];\n\n  const origin = util.coordToPlane(model.bbox, originLng, originLat);\n\n  const geom = useMemo(() => {\n    const shape = new THREE.Shape();\n\n    shape.moveTo(0, 0);\n    base\n      .slice()\n      .reverse()\n      .forEach((v) => {\n        const p = util.coordToPlane(model.bbox, v[0], v[1]);\n        shape.lineTo(p.x - origin.x, p.y - origin.y);\n      });\n\n    const extrudeSettings = {\n      steps: 1,\n      depth: depth || 50,\n      bevelEnabled: false,\n    };\n    return new THREE.ExtrudeBufferGeometry(shape, extrudeSettings);\n  }, [model, base, origin.x, origin.y, depth]);\n\n  const [hover, setHover] = useState(false);\n\n  const color = {\n    default: 0xf1f3f4,\n    hover: 0x666666,\n  };\n\n  useEffect(() => {\n    document.body.style.cursor = hover ? 'pointer' : 'auto';\n  }, [hover]);\n\n  return (\n    <mesh\n      position={[origin.x, origin.y, z]}\n      geometry={geom}\n      onClick={props.onClick}\n      onPointerDown={onPointerDown}\n      onPointerOver={(ev) => {\n        ev.stopPropagation();\n        setHover(true);\n      }}\n      onPointerOut={(ev) => setHover(false)}\n    >\n      <meshLambertMaterial color={hover ? color.hover : color.default} />\n      <lineSegments>\n        <edgesGeometry attach=\"geometry\" args={[geom, 45]} />\n        <lineBasicMaterial color={0xcccccc} attach=\"material\" />\n      </lineSegments>\n      <Html style={{ pointerEvents: 'none' }}>\n        {hover && <Popup item={{ name: props.name, type: props.type }} />}\n      </Html>\n    </mesh>\n  );\n}\n\nexport default Building;\n","import 'styled-components/macro';\nimport { Html } from '@react-three/drei';\nimport tw from 'twin.macro';\nimport { mdiPencilOutline, mdiDotsHorizontal } from '@mdi/js';\n\nimport * as THREE from 'three';\n\nfunction Comment({\n  position,\n  content = null,\n  z,\n  depth,\n  onPointerDown,\n  ...props\n}) {\n  position = new THREE.Vector3(position.x, position.y, position.z);\n  // console.log({ position });\n\n  return (\n    <Html\n      position={position}\n      style={{ transform: 'translate3d(-50%,-100%,0)' }}\n      distanceFactor={1000}\n    >\n      <div css={[tw`relative`]}>\n        <div\n          css={[tw`rounded bg-gray-600 bg-opacity-50 text-white py-2 px-3`]}\n          style={{ minWidth: '32px', width: 'max-content', maxWidth: '180px' }}\n        >\n          <div css={[tw`text-xs`]}>{content}</div>\n        </div>\n        <svg\n          css={[\n            tw`absolute text-gray-600 text-opacity-50 h-2 w-full left-0 top-full`,\n          ]}\n          x=\"0px\"\n          y=\"0px\"\n          viewBox=\"0 0 255 255\"\n          // xml:space=\"preserve\"\n        >\n          <polygon css={[tw`fill-current`]} points=\"0,0 127.5,127.5 255,0\" />\n        </svg>\n      </div>\n    </Html>\n  );\n}\n\nfunction CommentPrompt({ position, base, z, depth, onPointerDown, ...props }) {\n  return (\n    <Html\n      position={position}\n      style={{ transform: 'translate3d(-50%,-100%,0)' }}\n      distanceFactor={1000}\n    >\n      <div css={[tw`relative`]}>\n        <div\n          css={[tw`rounded bg-gray-600 bg-opacity-50 text-white py-2 px-3`]}\n          style={{}}\n        >\n          <div css={[tw`text-xs flex justify-center items-center`]}>\n            <div\n              css={[tw`flex justify-center items-center w-5 h-5 text-white`]}\n            >\n              <svg\n                css={[tw`fill-current`]}\n                style={{ width: '24px', height: '24px' }}\n                viewBox=\"0 0 24 24\"\n              >\n                <path d={mdiPencilOutline} />\n              </svg>\n            </div>\n            <div\n              css={[tw`flex justify-center items-center w-5 h-5 text-white`]}\n            >\n              <svg\n                css={[tw`fill-current`]}\n                style={{ width: '24px', height: '24px' }}\n                viewBox=\"0 0 24 24\"\n              >\n                <path d={mdiDotsHorizontal} />\n              </svg>\n            </div>\n          </div>\n        </div>\n        <svg\n          css={[\n            tw`absolute text-gray-600 text-opacity-50 h-2 w-full left-0 top-full`,\n          ]}\n          x=\"0px\"\n          y=\"0px\"\n          viewBox=\"0 0 255 255\"\n          // xml:space=\"preserve\"\n        >\n          <polygon css={[tw`fill-current`]} points=\"0,0 127.5,127.5 255,0\" />\n        </svg>\n      </div>\n    </Html>\n  );\n}\n\nexport default Comment;\nexport { CommentPrompt };\n","import feathers from '@feathersjs/client';\nimport socketio from '@feathersjs/socketio-client';\nimport io from 'socket.io-client';\n\nconst BACKEND_URL =\n  process.env.REACT_APP_DISCUSS_BACKEND_URL || window.location.origin;\n// console.log(BACKEND_URL);\n\nconst m = window.location.pathname.match(/^\\/twin\\/([^/]*)\\/?/);\nconst twinId = m && m.length > 1 ? m[1] : 'nowhere';\n// console.log(twinId);\n\nconst socket = io(BACKEND_URL, {\n  transports: ['websocket', 'polling'],\n});\nconst client = feathers();\n\nclient.configure(socketio(socket));\n\nexport { client, twinId };\n","import { atom } from 'jotai';\n\nconst commentPromptInitialValue = { position: null, content: null };\n\nconst enabledAtom = atom(true);\nconst statusAtom = atom('DISCONNECTED');\nconst commentPromptAtom = atom(commentPromptInitialValue);\nconst commentsAtom = atom(Array.from([]));\n\nexport {\n  commentPromptInitialValue,\n  enabledAtom,\n  statusAtom,\n  commentPromptAtom,\n  commentsAtom,\n};\n","import { useEffect } from 'react';\nimport { useAtom } from 'jotai';\nimport { useThree } from '@react-three/fiber';\n\nimport Comment, { CommentPrompt } from './Comment';\n\nimport { client, twinId } from '../index';\nimport * as store from '../store';\n\nexport default function Discuss({ ...props }) {\n  const [comments] = useAtom(store.commentsAtom);\n  const [commentPrompt, setCommentPrompt] = useAtom(store.commentPromptAtom);\n\n  const { scene, raycaster } = useThree();\n\n  const [enabled, setEnabled] = useAtom(store.enabledAtom);\n  const [, setStatus] = useAtom(store.statusAtom);\n\n  useEffect(() => {\n    client\n      .service('subscription')\n      .create({ uid: twinId })\n      .catch((err) => {\n        // console.log({ err });\n      });\n  }, []);\n\n  useEffect(() => {\n    if (enabled) {\n      client.io.connect();\n    } else {\n      // client.io.disconnect();\n    }\n  }, [enabled]);\n\n  useEffect(() => {\n    client.io.on('reconnect', (err) => {\n      setEnabled(true);\n      setStatus('CONNECTED');\n    });\n    client.io.on('connect_error', (err) => {\n      setEnabled(false);\n      setStatus('ERROR');\n    });\n    return () => {\n      // client.io.off('connect');\n      client.io.off('connect_error');\n    };\n  }, [setEnabled, setStatus]);\n  // useEffect(() => console.log({ comments }), [comments]);\n\n  return (\n    enabled && (\n      <>\n        <mesh\n          onPointerMissed={() => {\n            if (!raycaster || !scene) return;\n            const intersects = raycaster.intersectObjects(scene.children);\n            // console.log(intersects);\n            if (intersects.length > 0) {\n              const closest = intersects[0];\n              setCommentPrompt({ ...commentPrompt, position: closest.point });\n            } else {\n              setCommentPrompt(store.commentPromptInitialValue);\n            }\n          }}\n        ></mesh>\n        {!!commentPrompt.position && (\n          <CommentPrompt position={commentPrompt.position} />\n        )}\n        {comments.map((comment, i) => (\n          <Comment\n            key={i}\n            position={comment.position}\n            content={comment.content}\n          />\n        ))}\n      </>\n    )\n  );\n}\n","import { useEffect, createContext, useState } from 'react';\nimport { Canvas, useThree } from '@react-three/fiber';\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei';\n// import { CameraHelper } from 'three';\nimport axios from 'axios';\n\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\nimport Terrain from './Terrain';\nimport Layer from './Layer';\nimport Building from './Building';\n\nimport Discuss from './addon/discuss/components/Discuss';\n\nexport const ModelContext = createContext();\n\n/* Constants */\n// TODO: Improve\nconst terrainLevelZoom = 2;\nconst width = 1024,\n  height = 1024;\n\nfunction DefaultCamera({ ...props }) {\n  // const camera = useRef();\n  // useHelper(camera, CameraHelper, 1, 'hotpink');\n\n  return (\n    <PerspectiveCamera\n      makeDefault\n      up={[0, 0, 1]}\n      position={[0, -800 * 1.2, 400 * 1.2]}\n      fov={60}\n      aspect={window.innerWidth / window.innerHeight}\n      near={1}\n      far={2048}\n      // ref={camera}\n    />\n  );\n}\n\nfunction ExtendedOrbitControls({ ...props }) {\n  const CLOSEUP_THRESHOLD = 400000;\n\n  const [, setCloseup] = useAtom(store.closeupAtom);\n  const { camera } = useThree();\n\n  return (\n    <OrbitControls\n      target={[0, 0, 0]}\n      minDistance={100}\n      maxDistance={1500}\n      maxPolarAngle={Math.PI / 2 - 0.1}\n      onEnd={() => {\n        const dist2 =\n          camera.position.x ** 2 +\n          camera.position.y ** 2 +\n          camera.position.z ** 2;\n        // console.log(dist2);\n        dist2 < CLOSEUP_THRESHOLD ? setCloseup(true) : setCloseup(false);\n      }}\n    />\n  );\n}\n\nasync function completeModel(model, base) {\n  const blankTerrain = [];\n\n  if (model.terrain && model.terrain.path) {\n    model.terrain.path = base\n      ? new URL(model.terrain.path, base).toString()\n      : model.terrain.path;\n    model.terrain.data = await axios\n      .get(model.terrain.path)\n      .then((resp) => resp.data)\n      .catch(() => blankTerrain);\n  } else {\n    model.terrain = model.terrain || {};\n    model.terrain.data = blankTerrain;\n  }\n\n  const blankBuilding = {\n    routes: [],\n    buildings: [],\n  };\n\n  if (model.building && model.building.path) {\n    model.building.path = base\n      ? new URL(model.building.path, base).toString()\n      : model.building.path;\n    model.building.data = await axios\n      .get(model.building.path)\n      .then((resp) => resp.data)\n      .catch(() => blankBuilding);\n  } else {\n    model.building = model.building || {};\n    model.building.data = blankBuilding;\n  }\n\n  return model;\n}\n\nfunction ModelView({ model, basePath, ...props }) {\n  // console.log({ model: JSON.stringify(model) });\n\n  const [levelmap, setLevelmap] = useState([]);\n  const [buildings, setBuildings] = useState([]);\n\n  useEffect(() => {\n    completeModel(model, basePath).then((model) => {\n      setLevelmap(model.terrain.data);\n      setBuildings(model.building.data.buildings);\n    });\n  }, [model, basePath]);\n\n  const [layersState] = useAtom(store.layersStateAtom);\n  const [, setEntity] = useAtom(store.entityAtom);\n  const [, setDetailEntity] = useAtom(store.detailEntityAtom);\n\n  return (\n    <Canvas\n      id=\"model-view-canvas\"\n      linear={true}\n      dpr={Math.min(2, window.devicePixelRatio)}\n      gl={{ powerPreference: 'default', antialias: false }}\n    >\n      <DefaultCamera />\n      <ambientLight args={[0xffffff, 1]} />\n      <pointLight position={[10, 10, 10]} />\n      <ModelContext.Provider value={{ model: model }}>\n        <Terrain\n          levelmap={levelmap}\n          zoom={terrainLevelZoom}\n          width={width}\n          height={height}\n        >\n          {Object.values(model.modules)\n            .reduce(\n              (acc, module) => acc.concat(module.definition.layers || []),\n              [],\n            )\n            .map((layer) =>\n              layersState[layer.id] && layersState[layer.id].enabled ? (\n                <Layer key={layer.id} def={layer} basePath={basePath} />\n              ) : null,\n            )}\n          {buildings.map((building) => (\n            <Building\n              key={building.id}\n              base={building.base}\n              z={building.z}\n              depth={building.depth}\n              name={building.name}\n              type={building.type}\n              onPointerDown={(ev) => {\n                ev.stopPropagation();\n                setEntity(building);\n                setDetailEntity(building);\n              }}\n            />\n          ))}\n          <Discuss />\n        </Terrain>\n      </ModelContext.Provider>\n      )\n      <ExtendedOrbitControls />\n    </Canvas>\n  );\n}\n\nexport default ModelView;\n","import 'styled-components/macro';\nimport { useEffect, useRef, useState } from 'react';\nimport { mdiSend } from '@mdi/js';\nimport tw from 'twin.macro';\n\nimport { useAtom } from 'jotai';\n\nimport * as store from '../store';\nimport { client, twinId } from '../index';\n\nfunction Input({ ...props }) {\n  const [value, setValue] = useState('');\n  const inputRef = useRef();\n\n  const [commentPrompt, setCommentPrompt] = useAtom(store.commentPromptAtom);\n  const [, setComments] = useAtom(store.commentsAtom);\n  const [enabled] = useAtom(store.enabledAtom);\n  const [, setStatus] = useAtom(store.statusAtom);\n\n  useEffect(() => inputRef.current.focus(), [commentPrompt]);\n\n  // TODO: Here or somewhere else?\n  useEffect(() => {\n    client.service('discuss').on('created', (message) => {\n      // console.log(message);\n      setComments((comments) => [...comments, message]);\n    });\n  }, [setComments]);\n\n  // useEffect(() => console.log(comments), [comments]);\n\n  const submit = () => {\n    if (!commentPrompt.position) return;\n    const comment = {\n      ...commentPrompt,\n      content: value,\n      twinId: twinId, // TODO: Use anonymous auth instead\n    };\n    client\n      .service('discuss')\n      .create(comment)\n      .catch((err) => {\n        console.log('err', err);\n        setStatus('ERROR');\n      });\n    setCommentPrompt(store.commentPromptInitialValue);\n    setValue('');\n  };\n\n  return (\n    enabled && (\n      <div css={[tw`relative w-full md:w-[32rem]`]}>\n        <input\n          ref={inputRef}\n          css={[\n            tw`w-full h-10 px-6 text-sm text-gray-700 placeholder-gray-400 bg-gray-50 appearance-none border border-gray-200 rounded-lg focus:bg-white focus:outline-none focus:border-purple-500`,\n          ]}\n          type=\"text\"\n          placeholder=\"場所をダブルクリックしてコメント...\" // コメント...\n          value={value}\n          onChange={(ev) => setValue(ev.target.value)}\n          onKeyPress={(ev) => {\n            if (ev.key === 'Enter') {\n              ev.preventDefault();\n              submit();\n            }\n          }}\n        />\n        <div\n          css={[\n            tw`absolute inset-y-0 right-0 flex justify-center items-center w-10 h-10`,\n          ]}\n        >\n          <button\n            css={[\n              tw`flex justify-center items-center w-5 h-5 text-gray-300 hover:text-gray-600`,\n            ]}\n            onClick={() => {\n              submit();\n            }}\n          >\n            <svg\n              css={[tw`fill-current`]}\n              style={{ width: '24px', height: '24px' }}\n              viewBox=\"0 0 24 24\"\n            >\n              <path d={mdiSend} />\n            </svg>\n          </button>\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default Input;\n","import 'styled-components/macro';\nimport { useEffect } from 'react';\nimport {\n  mdiHelpCircleOutline,\n  mdiAccountGroup,\n  mdiFullscreen,\n  mdiCommentTextMultipleOutline,\n} from '@mdi/js';\nimport tw from 'twin.macro';\n\nimport { useAtom } from 'jotai';\n\nimport Input from './addon/discuss/components/Input';\nimport * as discussStore from './addon/discuss/store';\n\nfunction DiscussButton({ width, height, ...props }) {\n  const [enabled, setEnabled] = useAtom(discussStore.enabledAtom);\n  const [status] = useAtom(discussStore.statusAtom);\n\n  useEffect(() => {}, [enabled]);\n\n  const indicatorStyles = {\n    CONNECTED: tw`bg-blue-400`,\n    ERROR: tw`bg-red-400`,\n  };\n\n  return (\n    <>\n      <button\n        css={[tw`focus:outline-none`]}\n        onClick={() => setEnabled(!enabled)}\n      >\n        <svg style={{ width, height }} viewBox=\"0 0 24 24\">\n          <path fill=\"#000000\" d={mdiCommentTextMultipleOutline} />\n        </svg>\n      </button>\n      {(enabled || status === 'ERROR') && (\n        <span css={[tw`flex absolute h-3 w-3 top-0 right-0 -mt-1 -mr-1`]}>\n          <span\n            css={[\n              tw`absolute inline-flex h-full w-full rounded-full bg-blue-400 opacity-75`,\n              indicatorStyles[status],\n            ]}\n          ></span>\n        </span>\n      )}\n    </>\n  );\n}\n\nfunction Sidenav({ communityURL, ...props }) {\n  const HELP_URL = 'https://beta.owntwin.com/docs/about';\n\n  return (\n    <div css={[tw`fixed bottom-4 left-4 flex items-center h-10`]}>\n      <div css={[tw`flex items-center`]}>\n        <a href={HELP_URL} target=\"_blank\" rel=\"noreferrer\">\n          <svg style={{ width: '24px', height: '24px' }} viewBox=\"0 0 24 24\">\n            <path fill=\"#000000\" d={mdiHelpCircleOutline} />\n          </svg>\n        </a>\n      </div>\n      {!!communityURL && (\n        <div css={[tw`ml-3 flex items-center`]}>\n          <a href={communityURL} target=\"_blank\" rel=\"noreferrer\">\n            <svg style={{ width: '24px', height: '24px' }} viewBox=\"0 0 24 24\">\n              <path fill=\"#000000\" d={mdiAccountGroup} />\n            </svg>\n          </a>\n        </div>\n      )}\n      <div css={[tw`ml-3 flex items-center`]}>\n        <button\n          css={[tw`focus:outline-none`]}\n          onClick={() => {\n            const requestFullscreen =\n              document.body.requestFullscreen ||\n              document.body.webkitRequestFullscreen;\n            requestFullscreen.call(document.body);\n          }}\n        >\n          <svg style={{ width: '24px', height: '24px' }} viewBox=\"0 0 24 24\">\n            <path fill=\"#000000\" d={mdiFullscreen} />\n          </svg>\n        </button>\n      </div>\n      <div css={[tw`ml-3 flex items-center relative`]}>\n        <DiscussButton width=\"24px\" height=\"24px\" />\n      </div>\n      <div css={[tw`ml-3 flex items-center`]}>\n        <Input />\n      </div>\n    </div>\n  );\n}\n\nexport default Sidenav;\n","import 'styled-components/macro';\nimport { useState } from 'react';\n\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\nimport tw from 'twin.macro';\nimport {\n  // mdiChevronUp, mdiChevronDown,\n  mdiMenuUp,\n  mdiMenuDown,\n  mdiInformationOutline,\n  mdiOpenInNew,\n} from '@mdi/js';\n\nfunction getField(entity, key) {\n  const splitted = key.split(':', 2);\n  if (splitted.length === 2) {\n    return entity && entity.properties && entity.properties[key]\n      ? encodeURIComponent(entity.properties[key])\n      : null;\n  } else {\n    return entity && entity[key] ? encodeURIComponent(entity[key]) : null;\n  }\n}\n\nfunction ModulePane({ id, module, properties, isOpen, ...props }) {\n  const [paneOpen, setPaneOpen] = useState(isOpen || false);\n  const [moduleInfoOpen, setModuleInfoOpen] = useState(false);\n\n  const [layersState, setLayersState] = useAtom(store.layersStateAtom);\n  const [entity] = useAtom(store.entityAtom);\n\n  const definition = module.definition;\n  const layers = definition.layers;\n  const actions = definition.actions || [];\n  const filters = [];\n\n  properties = properties || {};\n\n  return (\n    <div css={[tw`border-b`]}>\n      <div\n        css={[tw`px-3 py-2 cursor-pointer hover:bg-blue-100 flex flex-col`]}\n        onClick={(ev) => {\n          setPaneOpen(!paneOpen);\n        }}\n      >\n        <div css={[tw`flex items-center`]}>\n          <div css={[tw`flex-grow`]}>{definition.name}</div>\n          <div css={[tw`flex items-center`]}>\n            <div\n              css={[tw`rounded p-1 hover:bg-blue-200`]}\n              onClick={(ev) => {\n                if (paneOpen) {\n                  ev.stopPropagation();\n                  setModuleInfoOpen(!moduleInfoOpen);\n                } else {\n                  setModuleInfoOpen(true);\n                }\n              }}\n            >\n              <svg\n                css={[tw`fill-current text-gray-600`]}\n                style={{ width: '18px', height: '18px' }}\n                viewBox=\"0 0 24 24\"\n              >\n                <path d={mdiInformationOutline} />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n      {paneOpen && (\n        <div css={[tw`px-3 pb-3 text-sm`]}>\n          {moduleInfoOpen && (\n            <div css={[tw`mb-2 mt-1`]}>\n              <div css={[tw`my-1`]}>説明</div>\n              <div css={[tw`p-2 text-sm bg-gray-100 rounded`]}>\n                <pre css={[tw`break-words whitespace-pre-wrap`]}>\n                  {definition.description || (\n                    <span css={[tw`text-gray-600`]}>未登録</span>\n                  )}\n                </pre>\n              </div>\n              <div css={[tw`mt-2 mb-1`]}>利用条件</div>\n              <div css={[tw`p-2 text-sm bg-gray-100 rounded`]}>\n                <pre css={[tw`break-words whitespace-pre-wrap`]}>\n                  {definition.license || (\n                    <span css={[tw`text-gray-600`]}>未登録</span>\n                  )}\n                </pre>\n              </div>\n            </div>\n          )}\n          <div css={[tw`mb-2`]}>\n            <div css={[tw`my-1`]}>アクション</div>\n            <ul>\n              {actions.length > 0 ? (\n                actions.map((action, i) => {\n                  const getProperty = (key) => {\n                    return (\n                      properties[`${id}:actions.${action.id}.${key}`] ||\n                      action[key] ||\n                      null\n                    );\n                  };\n                  const missingFields = [];\n\n                  if (!getProperty('href')) {\n                    missingFields.push('href');\n                  }\n\n                  if (!!action.fields) {\n                    action.fields.forEach((field) => {\n                      const ok = getField(entity, field) !== null;\n                      if (!ok) {\n                        missingFields.push(field);\n                      }\n                    });\n                  }\n\n                  function href() {\n                    const params = action.fields\n                      ? action.fields.map((field) => {\n                          const assign_to = getProperty(`fields.assign_to`); // TODO: Fix\n                          if (!assign_to) return '';\n                          const param = assign_to[field],\n                            value = getField(entity, field);\n                          if (!param || !value) return '';\n                          return `${param}=${value}`;\n                        })\n                      : [];\n\n                    return `${getProperty('href')}?${\n                      action.default_param ? `${action.default_param}&` : ''\n                    }${params.join('&')}`;\n                  }\n\n                  return (\n                    <li key={i}>\n                      <a\n                        href={href()}\n                        onClick={(ev) => {\n                          if (missingFields.length > 0) {\n                            ev.preventDefault();\n                            return false;\n                          }\n                        }}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        css={[\n                          tw`flex items-center cursor-pointer hover:text-gray-800`,\n                        ]}\n                      >\n                        <svg\n                          css={[tw`fill-current text-black mr-0.5`]}\n                          style={{ width: '14px', height: '14px' }}\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path d={mdiOpenInNew} />\n                        </svg>\n                        <div\n                          css={[\n                            missingFields.length > 0 ? tw`line-through` : null,\n                          ]}\n                        >\n                          {action.text}\n                        </div>\n                      </a>\n                      {missingFields.length > 0 && (\n                        <div\n                          css={[\n                            tw`bg-gray-500 text-white rounded px-1 py-0.5 mb-0.5 text-xs`,\n                          ]}\n                        >\n                          情報を追加してください:{' '}\n                          <code>{missingFields.join(', ')}</code>\n                        </div>\n                      )}\n                    </li>\n                  );\n                })\n              ) : (\n                <li>\n                  <span css={[tw`text-gray-600`]}>未登録</span>\n                </li>\n              )}\n            </ul>\n          </div>\n          <div css={[tw`mb-2`]}>\n            <div css={[tw`my-1`]}>レイヤー</div>\n            <ul>\n              {layers.length > 0 ? (\n                layers.map((item, i) => {\n                  return (\n                    <li key={i}>\n                      <input\n                        css={[tw`mr-1`]}\n                        type=\"checkbox\"\n                        checked={layersState[item.id].enabled}\n                        onChange={(ev) => {\n                          setLayersState((state) => {\n                            state[item.id].enabled = !state[item.id].enabled;\n                            return Object.assign({}, state);\n                          });\n                        }}\n                      />\n                      {item.name}\n                    </li>\n                  );\n                })\n              ) : (\n                <li>\n                  <span css={[tw`text-gray-600`]}>未登録</span>\n                </li>\n              )}\n            </ul>\n          </div>\n          <div css={[tw`mb-2`]}>\n            <div css={[tw`my-1`]}>フィルター</div>\n            <ul>\n              {filters.length > 0 ? (\n                filters.map((item, i) => (\n                  <li key={i}>\n                    <span css={[tw`text-gray-600`]}>{item.name}</span>\n                  </li>\n                ))\n              ) : (\n                <li>\n                  <span css={[tw`text-gray-600`]}>未登録</span>\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction ItemInfo({\n  name,\n  type,\n  iri,\n  item,\n  modules,\n  properties,\n  isOpen,\n  back,\n  ...props\n}) {\n  const [paneOpen, setPaneOpen] = useState(isOpen || false);\n  const [helpClicked, setHelpClicked] = useState(false);\n  const description = item.description || null;\n\n  return (\n    <div\n      css={[\n        tw`fixed top-4 left-4 flex flex-col bg-white shadow rounded right-4 sm:right-auto sm:w-72`,\n        paneOpen ? tw`bottom-20` : tw`bottom-auto`,\n      ]}\n      style={{ ...props.style, maxHeight: '40rem', zIndex: '20000000' }}\n    >\n      <div>\n        {back}\n        <div css={[back ? tw`border-t` : null, tw`py-2 px-3 rounded bg-white`]}>\n          <div css={[tw`text-xs`]}>{type}</div>\n          <div>{name}</div>\n          <div css={[tw`text-xs text-gray-600 break-all`]}>\n            {iri ? iri : '未登録'}\n          </div>\n        </div>\n      </div>\n      <div\n        css={[\n          tw`border-t flex justify-center cursor-pointer py-1 hover:bg-gray-100`,\n        ]}\n        onClick={() => {\n          setPaneOpen(!paneOpen);\n          !helpClicked && setHelpClicked(true);\n        }}\n      >\n        <div css={[tw`text-xs text-gray-800 flex items-center`]}>\n          <svg\n            css={[tw`fill-current text-gray-600`]}\n            style={{ width: '18px', height: '18px' }}\n            viewBox=\"0 0 24 24\"\n          >\n            <path d={paneOpen ? mdiMenuUp : mdiMenuDown} />\n          </svg>\n          {!helpClicked && <div>クリックで開く/閉じる</div>}\n        </div>\n      </div>\n      <div\n        css={[\n          paneOpen ? tw`block` : tw`hidden`,\n          tw`flex-grow overflow-y-scroll`,\n        ]}\n      >\n        <div css={[tw`mt-0 px-2 py-1 text-xs text-gray-800`]}>\n          インフォメーション\n        </div>\n        <div css={[tw`border rounded-sm py-2 px-3 m-2 mt-0`]}>\n          <div css={[tw`text-sm`, !description && tw`text-gray-600`]}>\n            {description ? description : '未登録'}\n          </div>\n        </div>\n        <div css={[tw`py-2`]}>\n          <div css={[tw`px-2 py-1 border-b text-xs text-gray-800`]}>\n            モジュール\n          </div>\n          {Object.entries(modules).map(([id, module]) => (\n            <ModulePane\n              key={id}\n              id={id}\n              module={module}\n              properties={properties}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemInfo;\n","import 'styled-components/macro';\nimport { useEffect, useState } from 'react';\nimport tw from 'twin.macro';\n\nfunction Clock({ ...props }) {\n  const [date, setDate] = useState();\n\n  useEffect(() => {\n    tick();\n    let timer = setInterval(() => tick(), 1000 * 30);\n\n    return function cleanup() {\n      clearInterval(timer);\n    };\n  }, []);\n\n  function tick() {\n    let _date = new Date().toLocaleString('ja-JP', {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n    setDate(_date);\n  }\n\n  return (\n    <div css={[tw`flex items-center`]}>\n      <div css={[tw`bg-white shadow rounded py-2 px-3 select-none`]}>{date}</div>\n    </div>\n  );\n}\n\nexport default Clock;\n","import {\n  useEffect,\n  useMemo,\n  createContext,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, PerspectiveCamera, Html } from '@react-three/drei';\nimport * as THREE from 'three';\n// import { CameraHelper } from 'three';\n\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\nimport * as util from './lib/util';\n\nexport const ModelContext = createContext();\n\nfunction DefaultCamera({ ...props }) {\n  // const camera = useRef();\n  // useHelper(camera, CameraHelper, 1, 'hotpink');\n\n  return (\n    <PerspectiveCamera\n      makeDefault\n      up={[0, 0, 1]}\n      position={[0, -800 * 0.5, 400 * 0.5]}\n      fov={60}\n      aspect={window.innerWidth / window.innerHeight}\n      near={1}\n      far={2048}\n      // ref={camera}\n    />\n  );\n}\n\nfunction BlankPlane({ width, height, color, ...props }) {\n  return (\n    <mesh>\n      <planeBufferGeometry args={[width, height]} />\n      <meshBasicMaterial\n        color={color || 0xf1f3f5}\n        polygonOffset={true}\n        polygonOffsetFactor={1}\n      />\n    </mesh>\n  );\n}\n\nfunction Building({ model, base, depth, floor, floors, ...props }) {\n  const planeWidth = 250,\n    planeHeight = 250;\n\n  const [entity, setEntity] = useAtom(store.entityAtom);\n\n  const originLng = base[0][0],\n    originLat = base[0][1];\n\n  const origin = util.coordToLocalPlane(\n    model.bbox,\n    originLng,\n    originLat,\n    planeWidth,\n    planeHeight,\n  );\n\n  const shape = useMemo(() => {\n    const shape = new THREE.Shape();\n    shape.moveTo(0, 0);\n\n    base.forEach((v) => {\n      const p = util.coordToLocalPlane(\n        model.bbox,\n        v[0],\n        v[1],\n        planeWidth,\n        planeHeight,\n      );\n      shape.lineTo(p.x - origin.x, p.y - origin.y);\n    });\n\n    return shape;\n  }, [base, model, origin.x, origin.y]);\n\n  const geom = useMemo(() => {\n    const extrudeSettings = {\n      steps: 1,\n      depth: (depth || 50) * 0.2, // TODO: Fix\n      bevelEnabled: false,\n    };\n    return new THREE.ExtrudeBufferGeometry(shape, extrudeSettings);\n  }, [shape, depth]);\n\n  /* Floors */\n  let floorN = floor || 1;\n  let floorHeight = ((depth || 50) * 0.2) / floorN;\n  let floorsMetadata = floors ? floors : {};\n\n  const floorGeom = useMemo(() => new THREE.ShapeBufferGeometry(shape), [\n    shape,\n  ]);\n\n  let floorGroup = [];\n  const [activeFloor, setActiveFloor] = useState(null);\n  const [hover, setHover] = useState(null);\n  const [anchorHover, setAnchorHover] = useState(null);\n  const [anchorActive, setAnchorActive] = useState(null);\n\n  useEffect(() => {\n    if (!!entity && entity.id !== anchorActive) {\n      setAnchorActive(null);\n    }\n  }, [entity, anchorActive]);\n\n  useEffect(() => {\n    document.body.style.cursor = hover || anchorHover ? 'pointer' : 'auto';\n  }, [hover, anchorHover]);\n\n  for (let i = 0; i < floorN; i++) {\n    let floorMetadata = floorsMetadata[`${i + 1}`] || {\n      texture: null,\n      anchors: [],\n    };\n    floorMetadata['n'] = `${i + 1}`;\n\n    const anchorGroup = floorMetadata.anchors.map((v, j) => {\n      // console.log(v);\n\n      let p = util.coordToLocalPlane(\n        model.bbox,\n        v.position.lng,\n        v.position.lat,\n        planeWidth,\n        planeHeight,\n      );\n\n      return (\n        <mesh\n          key={j}\n          position={[p.x - origin.x, p.y - origin.y, floorHeight / 2]}\n          userData={{ data: v }}\n          visible={activeFloor === null || activeFloor === i + 1}\n        >\n          <sphereBufferGeometry args={[0.1, 20, 20]} />\n          <meshBasicMaterial color={0x2196f3} />\n          <mesh\n            name=\"hitbox\"\n            visible={activeFloor === null || activeFloor === i + 1}\n            onPointerOver={(ev) => {\n              ev.stopPropagation();\n              activeFloor === i + 1 && setAnchorHover(v.id);\n            }}\n            onPointerOut={(ev) => {\n              ev.stopPropagation();\n              anchorHover === v.id && setAnchorHover(null);\n            }}\n            onPointerDown={(ev) => {\n              if (activeFloor !== i + 1 || !anchorHover === v.id) return;\n              ev.stopPropagation();\n              // TODO: Switch on click\n              // setLocalEntity(v);\n              setEntity(v);\n              setAnchorActive(v.id);\n            }}\n          >\n            <sphereBufferGeometry args={[1, 20, 20]} />\n            <meshBasicMaterial\n              visible={anchorHover === v.id || anchorActive === v.id}\n              color={0x2196f3}\n              opacity={0.5}\n              transparent={true}\n            />\n          </mesh>\n          <Html style={{ pointerEvents: 'none' }}>\n            <div\n              style={{\n                display:\n                  activeFloor === null || activeFloor === i + 1\n                    ? 'block'\n                    : 'none',\n                fontSize: '0.75rem',\n                fontWeight:\n                  anchorHover === v.id || anchorActive === v.id ? 'bold' : null,\n                width: '10rem',\n              }}\n            >\n              {v.name}\n            </div>\n          </Html>\n        </mesh>\n      );\n    });\n\n    let floor = (\n      <mesh\n        key={i}\n        position-z={floorHeight * i}\n        geometry={floorGeom}\n        userData={{ metadata: floorMetadata }}\n        onPointerDown={(ev) => {\n          if (!!anchorHover) return;\n          if (activeFloor === i + 1) {\n            ev.stopPropagation();\n            setActiveFloor(null);\n          } else if (activeFloor === null) {\n            ev.stopPropagation();\n            setActiveFloor(i + 1);\n          }\n        }}\n        onPointerOver={(ev) => {\n          if (activeFloor === null || activeFloor === i + 1) {\n            ev.stopPropagation();\n            setHover(i + 1);\n          }\n        }}\n        onPointerOut={(ev) => {\n          if (activeFloor === null || activeFloor === i + 1) {\n            ev.stopPropagation();\n            setHover(null);\n          }\n        }}\n        visible={activeFloor === null || activeFloor === i + 1}\n      >\n        <meshBasicMaterial\n          color={hover === i + 1 ? 0xaaaaaa : 0xf1f3f4}\n          side={THREE.DoubleSide}\n          visible={activeFloor === null || activeFloor === i + 1}\n        />\n        <lineSegments>\n          <edgesGeometry attach=\"geometry\" args={[floorGeom]} />\n          <lineBasicMaterial color={0xcccccc} attach=\"material\" />\n        </lineSegments>\n        <group name=\"anchors\">{anchorGroup}</group>\n      </mesh>\n    );\n\n    floorGroup.push(floor);\n  }\n\n  const ref = useRef();\n  useLayoutEffect(() => {\n    const bbox = new THREE.Box3().setFromObject(ref.current);\n    const size = bbox.getSize(new THREE.Vector3());\n\n    const ratio = Math.min(\n      (planeWidth - 32) / size.x,\n      (planeHeight - 32) / size.y,\n    );\n\n    ref.current.scale.set(ratio, ratio, ratio);\n\n    const center = bbox.getCenter(new THREE.Vector3());\n    ref.current.translateX(-center.x * ratio);\n    ref.current.translateY(-center.y * ratio);\n  }, []);\n\n  // const ref = useUpdate((obj) => {\n  //   const bbox = new THREE.Box3().setFromObject(obj);\n  //   const size = bbox.getSize(new THREE.Vector3());\n\n  //   const ratio = Math.min(\n  //     (planeWidth - 32) / size.x,\n  //     (planeHeight - 32) / size.y,\n  //   );\n\n  //   obj.scale.set(ratio, ratio, ratio);\n\n  //   const center = bbox.getCenter(new THREE.Vector3());\n  //   obj.translateX(-center.x * ratio);\n  //   obj.translateY(-center.y * ratio);\n  // }, []);\n\n  return (\n    <mesh ref={ref} position={[0, 0, 0]} geometry={geom}>\n      <meshLambertMaterial wireframe={true} visible={false} />\n      <lineSegments>\n        <edgesGeometry attach=\"geometry\" args={[geom, 45]} />\n        <lineBasicMaterial color={0xcccccc} attach=\"material\" />\n      </lineSegments>\n      <group name=\"floors\">{floorGroup}</group>\n    </mesh>\n  );\n}\n\nfunction DetailView({ model, type, entity, ...props }) {\n  let entityComponent;\n\n  if (entityComponent) entityComponent = null;\n\n  if (!!entity && type === 'building') {\n    entityComponent = (\n      <Building\n        key={entity.id}\n        model={model}\n        base={entity.base}\n        depth={entity.depth}\n        floor={entity.floor}\n        floors={entity.floors}\n      />\n    );\n  }\n\n  return (\n    <Canvas\n      id=\"detail-view-canvas\"\n      linear={true}\n      dpr={Math.min(2, window.devicePixelRatio)}\n      gl={{ powerPreference: 'default', antialias: false }}\n    >\n      <DefaultCamera />\n      <ambientLight args={[0xffffff, 1]} />\n      <pointLight position={[10, 10, 10]} />\n      <BlankPlane width={250} height={250} />\n      {entityComponent}\n      <OrbitControls\n        target={[0, 0, 0]}\n        minDistance={100}\n        maxDistance={500}\n        maxPolarAngle={Math.PI / 2 - 0.1}\n      />\n    </Canvas>\n  );\n}\n\nexport default DetailView;\n","const model = {\n  id: null,\n  name: null,\n  type: null,\n  iri: null,\n  url: null,\n  community: null,\n  description: null,\n  bbox: {\n    minlng: 139.647216796875,\n    minlat: 35.550105335885505,\n    maxlng: 139.658203125,\n    maxlat: 35.55904339525895,\n  },\n  canvas: {\n    width: 1024,\n    height: 1024,\n  },\n  terrain: null,\n  building: null,\n  modules: {},\n};\n\nexport { model };\n","import 'styled-components/macro';\nimport { useEffect, useRef, useState } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport { useAtom } from 'jotai';\nimport * as store from './lib/store';\n\nimport axios from 'axios';\n\nimport ModelView from './ModelView';\nimport Sidenav from './Sidenav';\nimport ItemInfo from './ItemInfo';\nimport Clock from './Clock';\nimport DetailView from './DetailView';\n\nimport tw from 'twin.macro';\nimport './App.css';\nimport { mdiArrowLeftThinCircleOutline, mdiCloseCircle } from '@mdi/js';\n\nimport { model as defaultModel } from './model';\n\n// const DEBUG = false;\n\nasync function getModel() {\n  let model, basePath, path;\n  const url = new URL(window.location);\n  const params = new URLSearchParams(url.search);\n  // TODO: Debug only\n  if (params.has('twin')) {\n    basePath = params.get('twin');\n    path = new URL('./twin.json', basePath);\n  } else {\n    basePath = null;\n    path = './twin.json';\n  }\n  model = await axios\n    .get(path)\n    .then((resp) => resp.data)\n    .catch(() => defaultModel);\n  model._basePath = basePath;\n\n  if (params.has('no-terrain')) {\n    model.terrain = null;\n  }\n\n  model.bbox = {\n    minlng: model.bbox[0],\n    minlat: model.bbox[1],\n    maxlng: model.bbox[2],\n    maxlat: model.bbox[3],\n  };\n\n  return model;\n}\n\nfunction Debug() {\n  const [debugOpen, setDebugOpen] = useState(false);\n  const [debug, setDebug] = useAtom(store.debugAtom);\n\n  useEffect(() => {\n    if (!!debug) setDebugOpen(true);\n  }, [debug]);\n\n  return (\n    <div\n      id=\"debug\"\n      css={[\n        tw`rounded-t-md bg-gray-800 text-white fixed bottom-0 left-0 right-0 h-48 p-4 text-sm shadow-md`,\n        debugOpen ? tw`block` : tw`hidden`,\n      ]}\n    >\n      <div\n        css={[tw`absolute top-4 right-4 cursor-pointer`]}\n        onClick={() => {\n          setDebugOpen(false);\n          setDebug('');\n        }}\n      >\n        <svg style={{ width: '18px', height: '18px' }} viewBox=\"0 0 24 24\">\n          <path fill=\"#eee\" d={mdiCloseCircle} />\n        </svg>\n      </div>\n      <div css={[tw`overflow-y-scroll w-full h-full`]}>{debug}</div>\n    </div>\n  );\n}\n\nfunction App() {\n  const [model, setModel] = useState({\n    id: null,\n    name: null,\n    type: null,\n    iri: null,\n    description: null,\n    modules: [],\n  });\n  const [modelLoaded, setModelLoaded] = useState(false);\n\n  const [, setLayersState] = useAtom(store.layersStateAtom);\n\n  const [entity, setEntity] = useAtom(store.entityAtom);\n  const [detailEntity, setDetailEntity] = useAtom(store.detailEntityAtom);\n  const [item, setItem] = useState({});\n\n  useEffect(() => {\n    (async () => {\n      let model = await getModel();\n      setModel(model);\n      setModelLoaded(true);\n    })();\n  }, []);\n\n  useEffect(() => {\n    setLayersState(() => {\n      const acc = {};\n\n      Object.entries(model.modules).forEach(([id, module]) => {\n        const layers = module.definition.layers || [];\n        layers.forEach((layer) => {\n          acc[`${layer.id}`] = {\n            enabled:\n              model.properties[`${id}:layers.${layer.id}.enabled`] || false,\n          };\n        });\n      });\n\n      return acc;\n    });\n  }, [setLayersState, model.modules, model.properties]);\n\n  useEffect(() => {\n    !entity && model && model.id && setEntity(model);\n    if (!entity) return;\n    setItem({\n      name: entity.name,\n      type: entity.type_label || entity.type,\n      iri: entity.iri,\n      description: entity.description,\n    });\n  }, [entity, setEntity, model]);\n\n  const transitionRef = useRef(null);\n\n  return (\n    <div\n      className=\"App\"\n      id=\"App\"\n      css={[tw`fixed top-0 bottom-0 left-0 right-0`]}\n    >\n      <div\n        css={[\n          tw`absolute top-0 bottom-0 left-0 right-0 flex justify-center items-center text-sm text-gray-400 pointer-events-none`,\n          !detailEntity ? tw`flex` : tw`hidden`,\n        ]}\n      >\n        <div>表示されない場合は再読み込み</div>\n      </div>\n      <div\n        css={[\n          tw`absolute top-0 bottom-0 left-0 right-0`,\n          !detailEntity ? tw`block` : tw`hidden`,\n        ]}\n      >\n        {modelLoaded && <ModelView model={model} basePath={model._basePath} />}\n      </div>\n      <Transition nodeRef={transitionRef} in={!!detailEntity} timeout={1}>\n        {(state) => (\n          <div\n            ref={transitionRef}\n            className=\"detail-view\"\n            css={[\n              tw`absolute top-0 bottom-0 left-0 right-0`,\n              ['entering', 'entered'].includes(state) ? tw`block` : tw`hidden`,\n            ]}\n          >\n            <div\n              css={[\n                tw`w-full h-full`,\n                state === 'entered' ? tw`block` : tw`hidden`,\n              ]}\n            >\n              {modelLoaded && (\n                <DetailView\n                  model={model}\n                  type={'building'}\n                  entity={detailEntity}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </Transition>\n      {modelLoaded && (\n        <ItemInfo\n          name={item.name}\n          type={item.type}\n          iri={item.iri}\n          item={item}\n          modules={model.modules}\n          properties={model.properties}\n          back={\n            detailEntity && (\n              <div\n                css={[\n                  tw`text-sm text-gray-600 px-2 py-2 cursor-pointer flex items-center bg-gray-50 hover:bg-gray-100`,\n                ]}\n                onClick={(ev) => {\n                  ev.stopPropagation();\n                  if (detailEntity.id === entity.id) {\n                    setDetailEntity(null);\n                    setEntity(null);\n                  } else {\n                    setEntity(detailEntity);\n                  }\n                }}\n              >\n                <div css={[tw`mr-1`]}>\n                  <svg\n                    style={{ width: '18px', height: '18px' }}\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path fill=\"#888\" d={mdiArrowLeftThinCircleOutline} />\n                  </svg>\n                </div>\n                <div>戻る</div>\n              </div>\n            )\n          }\n        />\n      )}\n      <Debug />\n      <div css={[tw`absolute top-4 left-auto right-4 hidden sm:block`]}>\n        <Clock />\n      </div>\n      {modelLoaded && <Sidenav communityURL={model.community} />}\n      <a href=\"//beta.owntwin.com\" css={[tw`cursor-pointer`]}>\n        <div\n          className=\"logo\"\n          css={[\n            tw`absolute bottom-4 left-auto right-4 opacity-75 font-bold text-white bg-gray-500 rounded px-3 py-2`,\n          ]}\n        >\n          <div>OwnTwin</div>\n        </div>\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalStyles } from 'twin.macro';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}